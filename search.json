[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "COMP/STAT112 Notebook",
    "section": "",
    "text": "Welcome\nWelcome to my online portfolio for COMP/STAT112 course taken at Macalester College. Please, use the side bar on the left for navigation.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "bw/exam_1.html",
    "href": "bw/exam_1.html",
    "title": "\n1  Exam 1\n",
    "section": "",
    "text": "1.1 Total Consumption by Country\nCode# total consumption by country\nfood_consumption |&gt;\n  group_by(country) |&gt;\n  summarise(total_consumption = sum(consumption)) |&gt;\n  arrange(desc(total_consumption)) |&gt;\n  head(10) |&gt;\n  ggplot(aes(x = country, y = total_consumption, fill = country)) +\n  geom_col()\n\n\n\nColumn graph showing total consumption of all food categories by top ten highest-consuming countries. Data from Tidy Tuesday, https://github.com/rfordatascience/tidytuesday/tree/main/data/2020/2020-02-18.",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Exam 1</span>"
    ]
  },
  {
    "objectID": "bw/exam_1.html#total-consumption-by-food-category",
    "href": "bw/exam_1.html#total-consumption-by-food-category",
    "title": "\n1  Exam 1\n",
    "section": "\n1.2 Total Consumption by Food Category",
    "text": "1.2 Total Consumption by Food Category\n\nCode# total consumption by food category\nfood_consumption |&gt;\n  group_by(food_category) |&gt;\n  summarise(total_consumption = sum(consumption)) |&gt;\n  arrange(desc(total_consumption)) |&gt;\n  head(10) |&gt;\n  ggplot(aes(x = food_category, y = total_consumption, fill = food_category)) +\n  geom_col() + \n  theme(axis.text.x = element_text(angle = 30))\n\n\n\nColumn graph comparing total consumption across all countries by the top 10 most-consumed food categories. Data from Tidy Tuesday, https://github.com/rfordatascience/tidytuesday/tree/main/data/2020/2020-02-18.",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Exam 1</span>"
    ]
  },
  {
    "objectID": "bw/exam_1.html#grand-research-question",
    "href": "bw/exam_1.html#grand-research-question",
    "title": "\n1  Exam 1\n",
    "section": "\n1.3 Grand Research Question",
    "text": "1.3 Grand Research Question\nWhat does the consumption of each food category in each country look like?\n\nCodefood_consumption |&gt;\n  select(-co2_emmission) |&gt;\n  group_by(country) |&gt;\n  ggplot(aes(x = country, y = consumption, fill = food_category)) +\n  geom_col() +\n  labs(x = \"Country\", y = \"Consumption\", fill = \"Food Category\") +\n  theme(axis.text.x = element_text(angle = 80, size = 24), \n        axis.title.x = element_text(size = 40),\n        axis.text.y = element_text(size = 24),\n        axis.title.y = element_text(size = 40),\n        legend.position = \"bottom\", \n        legend.text = element_text(size = 36), \n        legend.title = element_text(size = 40), \n        legend.title.position = \"left\") +\n  scale_fill_viridis_d()",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Exam 1</span>"
    ]
  },
  {
    "objectID": "bw/exam_2.html",
    "href": "bw/exam_2.html",
    "title": "\n2  Exam 2\n",
    "section": "",
    "text": "2.1 Fix food_category Variable\nCodefc &lt;- fc |&gt;\n  mutate(food_category = fct_recode(food_category, \n                                    \"Lamb\" = \"Lamb & Goat\",\n                                    \"Dairy\" = \"Milk - inc. cheese\",\n                                    \"Wheat\" = \"Wheat and Wheat Products\",\n                                    \"Nuts\" = \"Nuts inc. Peanut Butter\"))",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Exam 2</span>"
    ]
  },
  {
    "objectID": "bw/exam_2.html#research-question-1-most-consuming-countries",
    "href": "bw/exam_2.html#research-question-1-most-consuming-countries",
    "title": "\n2  Exam 2\n",
    "section": "\n2.2 Research Question 1: Most Consuming Countries",
    "text": "2.2 Research Question 1: Most Consuming Countries\n\nCodefc |&gt;\n  select(-co2_emmission) |&gt;\n  group_by(country) |&gt;\n  summarise(consumption = sum(consumption)) |&gt;\n  arrange(desc(consumption)) |&gt;\n  head(5) \n\n# A tibble: 5 × 2\n  country     consumption\n  &lt;chr&gt;             &lt;dbl&gt;\n1 Finland            640.\n2 Lithuania          555.\n3 Sweden             550 \n4 Netherlands        534.\n5 Albania            533.\n\n\n\nCodefc |&gt;\n  select(-co2_emmission) |&gt;\n  group_by(country) |&gt;\n  summarise(consumption = sum(consumption)) |&gt;\n  arrange(desc(consumption)) |&gt;\n  head(5) |&gt;\n  ggplot(aes(x = country, y = consumption, fill = country)) +\n  geom_col() +\n  \n  labs(title = \"Top 5 Consuming Countries\", x = \"Country\", y = \"Total Consumption\", fill = \"Country\")",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Exam 2</span>"
    ]
  },
  {
    "objectID": "bw/exam_2.html#research-question-2-most-consuming-countries-of-each-food",
    "href": "bw/exam_2.html#research-question-2-most-consuming-countries-of-each-food",
    "title": "\n2  Exam 2\n",
    "section": "\n2.3 Research Question 2: Most Consuming Countries of Each Food",
    "text": "2.3 Research Question 2: Most Consuming Countries of Each Food\n\nCodefc |&gt;\n  select(-co2_emmission) |&gt;\n  group_by(food_category, country) |&gt;\n  summarise(consumption = sum(consumption)) |&gt;\n  slice_max(order_by = consumption, n = 5)\n\n`summarise()` has grouped output by 'food_category'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 55 × 3\n# Groups:   food_category [11]\n   food_category country   consumption\n   &lt;fct&gt;         &lt;chr&gt;           &lt;dbl&gt;\n 1 Beef          Argentina        55.5\n 2 Beef          Brazil           39.2\n 3 Beef          USA              36.2\n 4 Beef          Australia        33.9\n 5 Beef          Bermuda          33.2\n 6 Eggs          Japan            19.2\n 7 Eggs          Paraguay         18.8\n 8 Eggs          China            18.8\n 9 Eggs          Mexico           18.3\n10 Eggs          Ukraine          18.0\n# ℹ 45 more rows\n\n\n\nCodefc |&gt;\n  select(-co2_emmission) |&gt;\n  group_by(food_category, country) |&gt;\n  summarise(consumption = sum(consumption)) |&gt;\n  slice_max(order_by = consumption, n = 5) |&gt;\n  ggplot(aes(y = country, x = consumption)) +\n  geom_col() +\n  facet_wrap(~food_category, scales = \"free\")\n\n`summarise()` has grouped output by 'food_category'. You can override using the\n`.groups` argument.",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Exam 2</span>"
    ]
  },
  {
    "objectID": "bw/exam_2.html#research-question-3-food-consumption",
    "href": "bw/exam_2.html#research-question-3-food-consumption",
    "title": "\n2  Exam 2\n",
    "section": "\n2.4 Research Question 3: Food Consumption",
    "text": "2.4 Research Question 3: Food Consumption\n\nCodene_countries(returnclass = \"sf\") |&gt;\n  select(name, geometry) |&gt;\n  mutate(name = ifelse(name == \"United States of America\", \"USA\", name)) |&gt;\n  mutate(name = ifelse(name == \"Bosnia and Herz.\", \"Bosnia and Herzegovina\", name)) |&gt;\n  mutate(name = ifelse(name == \"Czechia\", \"Czech Republic\", name)) |&gt;\n  mutate(name = ifelse(name == \"Taiwan\", \"Taiwan. ROC\", name)) |&gt;\n  left_join(\n    fc |&gt;\n      select(-co2_emmission) |&gt;\n      group_by(food_category) |&gt;\n      mutate(consumption = (consumption - mean(consumption))/sd(consumption)), join_by(name == country)) |&gt;\n  pivot_wider(names_from = food_category, values_from = consumption) |&gt;\n  select(-\"NA\") |&gt;\n  pivot_longer(cols = c(-name, -geometry),\n               names_to = \"food_category\",\n               values_to = \"consumption\") |&gt;\n  ggplot() +\n  geom_sf(aes(fill = consumption)) +\n  facet_wrap(~food_category) +\n  theme(legend.position = \"bottom\") +\n  scale_fill_viridis_c() +\n  labs(title = \"Food Category Consumption Levels by Country\", fill = \"Consumption Level\") +\n  theme(title = element_text(size = 40),\n        legend.text = element_text(size = 20),\n        strip.text = element_text(size = 40))",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Exam 2</span>"
    ]
  },
  {
    "objectID": "bw/solo_project.html",
    "href": "bw/solo_project.html",
    "title": "\n3  Solo Project\n",
    "section": "",
    "text": "Codelibrary(sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\nCodelibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n4 Getting the Data\n\nCodeincome &lt;- read_csv(\"~/Documents/GitHub/portfolio-aadachi27/HDPulse_data_export1.csv\")\n\nRows: 67 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): County\ndbl (1): FIPS\nnum (1): Dollars\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nCode# removing the rows at the bottom which don't have data, just notes on the data\nincome &lt;- income |&gt;\n  na.omit()\n\n\n\n5 Getting Geographic Data\n\nCodeca_counties &lt;- read_sf(\"~/Documents/GitHub/portfolio-aadachi27/ca_boundary_data/cnty19_1.shp\")\n\n\n\n6 Making the Map\n\nCodeggplot(ca_counties) + \n   geom_sf(fill = \"#FBCAEF\", color = \"#48304D\") \n\n\n\n\n\n\n\n\n7 Joining the Datasets\n\nCodeincome &lt;- income |&gt;\n  mutate(County = str_replace(County, \" County\", \"\"))\n\njoin_counties_income &lt;- ca_counties |&gt;\n  full_join(income, join_by(COUNTY_NAM == County))\n\n\n\n8 Building the Choropleth Map\n\nCodeggplot(join_counties_income) +\n  geom_sf(aes(fill = Dollars)) +\n  scale_fill_gradientn(name = \"Median Household Income(Dollars)\",\n                       colors = c(\"#028090\", \"#00A896\", \"#F0F3BD\")) +\n  labs(title = \"California Median Household Income by County\")\n\n\n\nChoropleth map showing California median household income by county. The counties with the highest median household income are centered around San Francisco. Geographic data from https://gis.data.ca.gov/datasets/CALFIRE-Forestry::california-county-boundaries/explore. Household income data from https://hdpulse.nimhd.nih.gov. Visualization made by Annabelle Adachi.",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Solo Project</span>"
    ]
  },
  {
    "objectID": "bw/bw-uni.html",
    "href": "bw/bw-uni.html",
    "title": "\n4  Univariate Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking univariate visualization. The visualization will not perfect the first time but you are expected to improve on it throughout the semester especially after covering advanced topics such as effective viz.\n\nCodesurvey &lt;- read.csv(\"https://hash-mac.github.io/stat112site-s25/data/survey.csv\")\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nCodeggplot(survey, aes(x = hangout)) + \n  geom_bar(fill = \"#A60067\", color = \"#360A14\") + \n  labs(\n    x = \"Favorite Hangout Spot\", \n    y = \"Number of Students\", \n    title = \"Favorite Hangout Spots of Surveyed Students\", \n    caption = \"Made by Annabelle Adachi\"\n    )\n\n\n\nHistogram of students’ favorite spots to hang out at. Source: https://hash-mac.github.io/stat112site-s25/data/survey.csv",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Univariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-bi.html",
    "href": "bw/bw-bi.html",
    "title": "\n5  Bivariate Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking bivariate visualization. The visualization will not perfect the first time but you are expected to improve it throughout the semester especially after covering advanced topics such as effective viz.\n\nCodelibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nCodeelections &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  labs(\n    x = \"% Republican Votes 2016\", \n    y = \"% Republican Votes 2020\", \n    title = \"Percentage of Counties That Voted Republican in 2016 vs. 2020\",\n    caption = \"Made by Annabelle Adachi\"\n    )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\nDot plot of election results comparing the percentage of counties that voted for a Republican candidate in 2016 with the same figure in 2020. Source: https://mac-stat.github.io/data/election_2020_county.csv",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-tri.html",
    "href": "bw/bw-tri.html",
    "title": "\n6  Trivariate Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking trivariate visualization. The visualization will not perfect the first time but you are expected to improve on it throughout the semester especially after covering advanced topics such as effective viz.\n\nCodelibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nCodeeducation &lt;- read.csv(\"https://mac-stat.github.io/data/sat.csv\")\n\nggplot(education, aes(x = expend, y = sat, color = fracCat)) +\n  geom_point() + \n  geom_smooth(method = \"lm\") +\n  labs(\n    x = \"State Expenditure Per Student in Thousands of Dollars\",\n    y = \"Average Total SAT Score\",\n    title = \"Effect of State Spending on SAT Scores, Separated by Test Participation\",\n    color = \"% of Students Who Took SAT\",\n    caption = \"Made by Annabelle Adachi\"\n  ) +\n  scale_color_viridis_d()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\nDot plot of state spending per pupil in thousands of dollars versus average total SAT score by state, faceted by the percentage of student participation in the SAT. Source: https://mac-stat.github.io/data/sat.csv.",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Trivariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-quad.html",
    "href": "bw/bw-quad.html",
    "title": "\n7  Quadvariate Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking quadvariate visualization. The visualization will not perfect the first time but you are expected to improve on it throughout the semester especially after covering advanced topics such as effective viz.\n\nCodelibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nCodeweather &lt;- read.csv(\"https://mac-stat.github.io/data/weather_3_locations.csv\") |&gt; \n  mutate(date = as.Date(date))\n\nggplot(weather, aes(x = humidity3pm, y = temp3pm, color = windspeed3pm)) + \n  geom_point() +\n  facet_grid(~location) +\n  geom_smooth(method = \"lm\") +\n  scale_color_viridis_c() +\n  labs(\n    title = \"3pm Humidity vs. Temperature vs. Wind Speed at Three Locations\",\n    x = \"Humidity Level\",\n    y = \"Temperature (Celsius)\",\n    color = \"Wind Speed (km/hr)\",\n    caption = \"Made by Annabelle Adachi\"\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: The following aesthetics were dropped during statistical transformation:\ncolour.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\nThe following aesthetics were dropped during statistical transformation:\ncolour.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\nThe following aesthetics were dropped during statistical transformation:\ncolour.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\nWarning: Removed 19 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\nDot plot showing humidity at 3pm vs. temperature in degrees Celsius at 3pm vs. wind speed in kilometers per hour at 3pm, at three separate Australian locations: Hobart, Uluru, and Wollongong. Source: https://mac-stat.github.io/data/weather_3_locations.csv.",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Quadvariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-spatial.html",
    "href": "bw/bw-spatial.html",
    "title": "\n8  Spatial Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking spatial visualization. The visualization will not perfect the first time but you are expected to improve on it throughout the semester especially after covering advanced topics such as effective viz.\n\nCodelibrary(sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\nCodelibrary(maps)\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\n\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\n\n\nAttaching package: 'mosaic'\n\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nCodelibrary(socviz)\ndata(county_map) \n\nelections_by_counties &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n\nelections_by_counties &lt;- elections_by_counties |&gt; \n  select(state_name, state_abbr, county_name, county_fips,\n          repub_pct_20, median_age, median_rent, winner_20) |&gt; \n  mutate(repub_20_categories = \n           cut(repub_pct_20, \n               breaks = seq(0, 100, by = 10),\n               labels = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\",\n                          \"50-59\", \"60-69\", \"70-79\", \"80-89\", \"90-100\"),\n               include.lowest = TRUE))\n\nelections_by_counties &lt;- elections_by_counties |&gt; \n  mutate(county_fips = as.character(county_fips)) |&gt; \n  mutate(county_fips = \n           ifelse(nchar(county_fips) == 4, paste0(\"0\", county_fips), county_fips))\n\nwinner &lt;- c(dem = \"Democratic Winner\", repub = \"Republican Winner\")\n\nggplot(elections_by_counties, aes(map_id = county_fips, fill = median_rent)) +\n  geom_map(map = county_map) +\n  scale_fill_viridis_c() +\n  expand_limits(x = county_map$long, y = county_map$lat) +\n  theme_map() +\n  theme(legend.position = \"right\") + \n  coord_equal() +\n  facet_wrap(~winner_20, labeller = labeller(winner_20 = winner)) +\n  labs(\n    title = \"Median Rent vs. 2020 Election Results\",\n    fill = \"Median Rent Per Month (Dollars)\",\n    caption = \"Made by Annabelle Adachi\"\n  )\n\n\n\nMap showing median monthy rent cost across the United States(exluding Alaska and Hawaii), separated by the 2020 general presidential election results. Source: https://mac-stat.github.io/data/election_2020_county.csv.",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-uni.html",
    "href": "ica/ica-uni.html",
    "title": "\n9  Univariate Viz\n",
    "section": "",
    "text": "10 Exercise 1: Research Questions\nCodehead(hikes)\n\n             peak elevation difficulty ascent length time    rating\n1     Mt. Marcy        5344          5   3166   14.8 10.0  moderate\n2 Algonquin Peak       5114          5   2936    9.6  9.0  moderate\n3   Mt. Haystack       4960          7   3570   17.8 12.0 difficult\n4   Mt. Skylight       4926          7   4265   17.9 15.0 difficult\n5 Whiteface Mtn.       4867          4   2535   10.4  8.5      easy\n6       Dix Mtn.       4857          5   2800   13.2 10.0  moderate",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Univariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-uni.html#part-a",
    "href": "ica/ica-uni.html#part-a",
    "title": "\n9  Univariate Viz\n",
    "section": "\n14.1 Part A",
    "text": "14.1 Part A\n\nThe purpose of the ‘+’ is to connect the different functions together. If the pluses are taken away the bar chart doesn’t appear.\nThe function is called geom_bar() because because it is creating a geometric visual based on the data–it uses geometry to fit the size of the bars to the data.\nlabs() stands for labels. This function is used to label the axes of the graph.\nThe color value assigns the outline color of the bar, whereas the fill value assigns the fill color of the bar. ## Part B\nWe observed the difficult, easy, and moderate categories.\nThe moderate category was by far the most common category.\nThe Adirondacks hikes examined in this dataset are most commonly rated at a moderate difficulty. ## Part C I don’t like that the difficulty ratings aren’t in order of easy to difficult, and that the x-axis is labeled “rating” which could be more specific.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Univariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-uni.html#part-a-1",
    "href": "ica/ica-uni.html#part-a-1",
    "title": "\n9  Univariate Viz\n",
    "section": "\n16.1 Part A",
    "text": "16.1 Part A\n\n6 hikes have an elevation between 4500 and 4700 feet\n2 total hikes have an elevation of at least 5100 feet ## Part B The typical elevation of the hikes is around 3900 to 4500 feet. The lowest elevation is 3700 feet and the highest elevation is 5500 feet. The distribution is left-skewed, which means that hikes are most commonly around 4000 feet elevation. Hikes that are on the lower and higher ends of the elevation range are less common.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Univariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-bi.html",
    "href": "ica/ica-bi.html",
    "title": "\n10  Bivariate Viz\n",
    "section": "",
    "text": "10.1 Exercise 0: Review",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-bi.html#exercise-0-review",
    "href": "ica/ica-bi.html#exercise-0-review",
    "title": "\n10  Bivariate Viz\n",
    "section": "",
    "text": "10.1.1 Part A\nGuess: The Republican candidate probably won around 45% of the 3000 total counties in 2020.\n\nCode# Load data\nelections &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nCodeggplot(elections, aes(x = winner_20)) + \n  geom_bar()\n\n\n\n\n\n\n\nFollow-Up Questions: - How did the number of counties won by republicans change from one election year to another? - What is the distribution of county winners across different states?",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-bi.html#exercise-1-quantitative-vs.-quantitative-intuition-check",
    "href": "ica/ica-bi.html#exercise-1-quantitative-vs.-quantitative-intuition-check",
    "title": "\n10  Bivariate Viz\n",
    "section": "\n10.2 Exercise 1: Quantitative vs. Quantitative Intuition Check",
    "text": "10.2 Exercise 1: Quantitative vs. Quantitative Intuition Check\nTo replicate using ggplot: - info needed: repub_pct_16 and repub_pct_20 - geom_dotplot could represent this data.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-bi.html#exercise-2-quantitative-variables",
    "href": "ica/ica-bi.html#exercise-2-quantitative-variables",
    "title": "\n10  Bivariate Viz\n",
    "section": "\n10.3 Exercise 2: Quantitative Variables",
    "text": "10.3 Exercise 2: Quantitative Variables\n\nCode# Set up the plotting frame\n# showing two variables, one on x-axis and y-axis, instead of one variable on x-axis and count on the y-axis\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16))\n\n\n\n\n\n\nCode# Add a layer of points for each county\n# creating a dot plot\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point()\n\n\n\n\n\n\nCode# Change the shape of the points\n# variety of possible shapes depending on what number is entered\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point(shape = 15)\n\n\n\n\n\n\nCode# YOU TRY: Modify the code to make the points \"orange\"\n# NOTE: Try to anticipate if \"color\" or \"fill\" will be useful here. Then try both.\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point(shape = 5, color = \"orange\")\n\n\n\n\n\n\nCode# Add a layer that represents each county by the state it's in\n# Take note of the geom and the info it needs to run!\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_text(aes(label = state_abbr, color = state_abbr))",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-bi.html#exercise-3-reflect",
    "href": "ica/ica-bi.html#exercise-3-reflect",
    "title": "\n10  Bivariate Viz\n",
    "section": "\n10.4 Exercise 3: Reflect",
    "text": "10.4 Exercise 3: Reflect\nThere is a strong relationship between Republican support in 2016 and 2020. There is a positive correlation between state percentages of Republican support in 2016 and 2020. There seem to be a couple of outliers for some counties in Texas that increased support for the Republican candidate in 2020 in comparison to 2016, rather than following the overall trendline of staying roughly the same.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-bi.html#exercise-4-visualizing-the-trend",
    "href": "ica/ica-bi.html#exercise-4-visualizing-the-trend",
    "title": "\n10  Bivariate Viz\n",
    "section": "\n10.5 Exercise 4: Visualizing the Trend",
    "text": "10.5 Exercise 4: Visualizing the Trend\n\nCodeggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point() +\n  geom_smooth()\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\n\n\nCode# smooth model but no individual points\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point() +\n  geom_smooth()\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-multi.html",
    "href": "ica/ica-multi.html",
    "title": "\n11  Mulivariate Viz\n",
    "section": "",
    "text": "11.1 Exercise 1: SAT Scores",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Mulivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-multi.html#exercise-1-sat-scores",
    "href": "ica/ica-multi.html#exercise-1-sat-scores",
    "title": "\n11  Mulivariate Viz\n",
    "section": "",
    "text": "11.1.1 Part A\n\nCode# Import and check out data\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nCodeeducation &lt;- read.csv(\"https://mac-stat.github.io/data/sat.csv\")\nhead(education)\n\n       State expend ratio salary frac verbal math  sat  fracCat\n1    Alabama  4.405  17.2 31.144    8    491  538 1029   (0,15]\n2     Alaska  8.963  17.6 47.951   47    445  489  934 (45,100]\n3    Arizona  4.778  19.3 32.175   27    448  496  944  (15,45]\n4   Arkansas  4.459  17.1 28.934    6    482  523 1005   (0,15]\n5 California  4.992  24.0 41.078   45    417  485  902  (15,45]\n6   Colorado  5.443  18.4 34.571   29    462  518  980  (15,45]\n\nCodeggplot(education, aes(x = sat)) + \n  geom_density(fill = \"pink\")\n\n\n\n\n\n\n\n\n11.1.2 Part B\nAccording to the data plot:\n\nrange is approximately 830 - 1120\nmost common score approximately 900\nspikes around 900 and 1030",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Mulivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-multi.html#exercise-2-sat-scores-vs.-per-pupil-spending-and-sat-scores-vs.-teacher-salaries",
    "href": "ica/ica-multi.html#exercise-2-sat-scores-vs.-per-pupil-spending-and-sat-scores-vs.-teacher-salaries",
    "title": "\n11  Mulivariate Viz\n",
    "section": "\n11.2 Exercise 2: SAT Scores vs. Per Pupil Spending and SAT Scores vs. Teacher Salaries",
    "text": "11.2 Exercise 2: SAT Scores vs. Per Pupil Spending and SAT Scores vs. Teacher Salaries\n\n11.2.1 Part A\n\nCodeeducation &lt;- read.csv(\"https://mac-stat.github.io/data/sat.csv\")\n\nggplot(education, aes(x = expend, y = sat)) + \n  geom_point(shape = 5, color = \"black\") + \n  geom_smooth(method = \"lm\", color = \"pink\", fill = \"pink\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\nCodeggplot(education, aes(x = salary, y = sat)) + \n  geom_point(shape = 7) + \n  geom_smooth(method = \"lm\", color = \"pink\", fill = \"pink\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n11.2.2 Part B\nSurprisingly, there is a negative relationship between SAT scores and spending. The more a state spends on education per pupil, and the higher teachers’ salaries are, the lower the scores are.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Mulivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-multi.html#exercise-3-sat-scores-vs.-per-pupil-spending-and-teacher-salaries",
    "href": "ica/ica-multi.html#exercise-3-sat-scores-vs.-per-pupil-spending-and-teacher-salaries",
    "title": "\n11  Mulivariate Viz\n",
    "section": "\n11.3 Exercise 3: SAT Scores vs. Per Pupil Spending and Teacher Salaries",
    "text": "11.3 Exercise 3: SAT Scores vs. Per Pupil Spending and Teacher Salaries\n\nCodeeducation &lt;- read.csv(\"https://mac-stat.github.io/data/sat.csv\")\n\nggplot(education, aes(x = expend, y = sat, color = salary)) + \n  geom_point(size = 3) + \n  geom_smooth(method = \"lm\", color = \"pink\")\n\n`geom_smooth()` using formula = 'y ~ x'",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Mulivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-multi.html#exercise-4-another-way-to-incorporate-scale",
    "href": "ica/ica-multi.html#exercise-4-another-way-to-incorporate-scale",
    "title": "\n11  Mulivariate Viz\n",
    "section": "\n11.4 Exercise 4: Another Way to Incorporate Scale",
    "text": "11.4 Exercise 4: Another Way to Incorporate Scale\n\nCodeggplot(education, aes(y = sat, x = salary, color = cut(expend, 2))) + \n  geom_point() + \n  geom_smooth(se = FALSE, method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nThe higher teachers’ salaries are, the more is spent on education per student. The more is spent on education, and by correlation the higher teachers’ salaries are, the lower the SAT scores are.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Mulivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-multi.html#exercise-5-finally-an-explanation",
    "href": "ica/ica-multi.html#exercise-5-finally-an-explanation",
    "title": "\n11  Mulivariate Viz\n",
    "section": "\n11.5 Exercise 5: Finally an Explanation",
    "text": "11.5 Exercise 5: Finally an Explanation\n\n11.5.1 Part A\n\nCodeggplot(education, aes(x = fracCat, fill = fracCat)) + \n  geom_bar() + \n  xlab(\"Fraction Who Take SAT\")\n\n\n\n\n\n\n\n\n11.5.2 Part B\n\nCodeggplot(education, aes(x = sat, fill = fracCat, color = fracCat)) + \n  geom_density(alpha = 0.5)\n\n\n\n\n\n\nCodeggplot(education, aes(x = sat, fill = fracCat)) +\n  geom_histogram(color = \"black\", binwidth = 50) +\n  facet_wrap(~fracCat)\n\n\n\n\n\n\n\nIn states with a higher percentage of students taking the SAT, the scores tend to be much lower, whereas in states with a lower percentage of students taking the SAT, the scores are higher. In the low and medium categories of SAT participation, the data is also much more even across the whole range, whereas the high-participation scores spike considerably at around 890. This makes sense in context because in places where less of the population takes the SAT, only those who do the best on the test are the ones taking it.\n\n11.5.3 Part C\n\nCodeggplot(education, aes(x = expend, y = sat, color = fracCat)) +\n  geom_point() + \n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nThis graphic shows that when states with similar participation rates are compared to each other(eliminating the effect that the participation rate will have on the data), there is a slight increase in SAT scores when the money spent on education increases.\n\n11.5.4 Part D\nIt appeared as if SAT scores were decreasing before the fracCat variable was accounted for because in states where there is less funding for education and therefore less students take the SAT, only those who beleive they will get a high score take it, making it appear as though there is a correlation between lower spending and higher SAT scores.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Mulivariate Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html",
    "href": "ica/ica-spatial.html",
    "title": "\n12  Spatial Viz\n",
    "section": "",
    "text": "12.1 Exercise 1: A leaflet with markers/points\nCodefave_places &lt;- read.csv(\"https://hash-mac.github.io/stat112site-s25/data/our_fave_places.csv\")\n\n# Check it out\nhead(fave_places)\n\n  latitude longitude\n1       59        18\n2       45       -93\n3       33      -117\n4       40       116\n5       40       106\n6       37      -122",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#exercise-1-a-leaflet-with-markerspoints",
    "href": "ica/ica-spatial.html#exercise-1-a-leaflet-with-markerspoints",
    "title": "\n12  Spatial Viz\n",
    "section": "",
    "text": "12.1.1 Part A\n\nCode# Load the leaflet package\nlibrary(leaflet)\n\n# Just a plotting frame\nleaflet(data = fave_places)|&gt;\n  addTiles()|&gt;\n  addMarkers()",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#exercise-2-details",
    "href": "ica/ica-spatial.html#exercise-2-details",
    "title": "\n12  Spatial Viz\n",
    "section": "\n12.2 Exercise 2: Details",
    "text": "12.2 Exercise 2: Details\n\nCode# Load package needed to change color\nlibrary(gplots)\n\n\nAttaching package: 'gplots'\n\n\nThe following object is masked from 'package:stats':\n\n    lowess\n\nCode# We can add colored circles instead of markers at each location\nleaflet(data = fave_places) |&gt; \n  addTiles() |&gt; \n  addCircles(weight = 10, opacity = 1, color = \"#a53860\")|&gt;\n  addProviderTiles(\"USGS\")|&gt;\n  addPolylines(lng = ~longitude, lat = ~latitude, color = \"#450920\")",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#exercise-3-your-turn",
    "href": "ica/ica-spatial.html#exercise-3-your-turn",
    "title": "\n12  Spatial Viz\n",
    "section": "\n12.3 Exercise 3: Your Turn",
    "text": "12.3 Exercise 3: Your Turn\n\nCodelibrary(leaflet)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nCode# Import starbucks location data\nstarbucks &lt;- read.csv(\"https://mac-stat.github.io/data/starbucks.csv\")\n\nhead(starbucks)\n\n      Brand Store.Number               Store.Name Ownership.Type\n1 Starbucks 47370-257954            Meritxell, 96       Licensed\n2 Starbucks 22331-212325         Ajman Drive Thru       Licensed\n3 Starbucks 47089-256771                Dana Mall       Licensed\n4 Starbucks 22126-218024               Twofour 54       Licensed\n5 Starbucks 17127-178586             Al Ain Tower       Licensed\n6 Starbucks 17688-182164 Dalma Mall, Ground Floor       Licensed\n                   Street.Address             City State.Province Country\n1               Av. Meritxell, 96 Andorra la Vella              7      AD\n2            1 Street 69, Al Jarf            Ajman             AJ      AE\n3    Sheikh Khalifa Bin Zayed St.            Ajman             AJ      AE\n4                 Al Salam Street        Abu Dhabi             AZ      AE\n5 Khaldiya Area, Abu Dhabi Island        Abu Dhabi             AZ      AE\n6            Dalma Mall, Mussafah        Abu Dhabi             AZ      AE\n  Postcode Phone.Number                Timezone Longitude Latitude\n1    AD500    376818720 GMT+1:00 Europe/Andorra      1.53    42.51\n2                          GMT+04:00 Asia/Dubai     55.47    25.42\n3                          GMT+04:00 Asia/Dubai     55.47    25.39\n4                          GMT+04:00 Asia/Dubai     54.38    24.48\n5                          GMT+04:00 Asia/Dubai     54.54    24.51\n6                          GMT+04:00 Asia/Dubai     54.49    24.40\n\nCode# Don't worry about the syntax\nstarbucks_mn &lt;- starbucks |&gt;   \n  filter(State.Province == \"MN\")\n\n\nleaflet(data = starbucks_mn) |&gt; \n  addTiles() |&gt; \n  addCircles(weight = 5, opacity = 1, color = \"#2ec4b6\")|&gt;\n  addProviderTiles(\"USGS\")\n\nAssuming \"Longitude\" and \"Latitude\" are longitude and latitude, respectively",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#exercise-3-a-simple-scatterplot",
    "href": "ica/ica-spatial.html#exercise-3-a-simple-scatterplot",
    "title": "\n12  Spatial Viz\n",
    "section": "\n12.4 Exercise 3: A Simple Scatterplot",
    "text": "12.4 Exercise 3: A Simple Scatterplot\n\nCodeggplot(starbucks, aes(x = Longitude, y = Latitude)) +\n  geom_point(size = 0.2, alpha = 0.2, color = \"#70e000\")\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#exercise-4-adding-a-country-level-background",
    "href": "ica/ica-spatial.html#exercise-4-adding-a-country-level-background",
    "title": "\n12  Spatial Viz\n",
    "section": "\n12.5 Exercise 4: Adding a Country-Level Background",
    "text": "12.5 Exercise 4: Adding a Country-Level Background\n\nCode# Load the package\nlibrary(rnaturalearth)\nlibrary(tidyverse)\nstarbucks &lt;- read.csv(\"https://mac-stat.github.io/data/starbucks.csv\")\n\n# Get info about country boundaries across the world\n# in a \"sf\" or simple feature format\nworld_boundaries &lt;- ne_countries(returnclass = \"sf\")\n\n# What does this code produce?\n# What geom are we using for the point map?\nggplot(world_boundaries) + \n  geom_sf()\n\n\n\n\n\n\nCode# Load package needed to change map theme\nlibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\n\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\n\n\nAttaching package: 'mosaic'\n\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nCode# Add a point for each Starbucks\n# NOTE: The Starbucks info is in our starbucks data, not world_boundaries\n# How does this change how we use geom_point?!\nggplot(world_boundaries) + \n  geom_sf() + \n  geom_point(\n    data = starbucks,\n    aes(x = Longitude, y = Latitude),\n    alpha = 0.3, size = 0.2, color = \"darkgreen\"\n  ) +\n  theme_map()\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nThis map demonstrates that there is the highest concentration of Starbucks locations in the United States, parts of Europe, eastern China, and Japan.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#exercise-5-zooming-in-on-some-countries",
    "href": "ica/ica-spatial.html#exercise-5-zooming-in-on-some-countries",
    "title": "\n12  Spatial Viz\n",
    "section": "\n12.6 Exercise 5: Zooming in on Some Countries",
    "text": "12.6 Exercise 5: Zooming in on Some Countries\n\nCode# We'll learn this syntax soon! Don't worry about it now.\nstarbucks_cma &lt;- starbucks |&gt; \n  filter(Country %in% c('CA', 'MX', 'US'))\n\ncma_boundaries &lt;- ne_states(\n  country = c(\"canada\", \"mexico\", \"united states of america\"),\n  returnclass = \"sf\")\n\n# Just the boundaries\nggplot(cma_boundaries) + \n  geom_sf(color = \"#afb600\", fill = \"#ffd400\") +\n  geom_point(\n    data = starbucks_cma, aes(x = Longitude, y = Latitude), \n    alpha = 0.3, size = 0.2, color = \"#0087b1\"\n  ) +\n  coord_sf(xlim = c(-179.14, -50))\n\n\n\n\n\n\nCode  theme_map()\n\nList of 136\n $ line                            :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : num 0.545\n  ..$ linetype     : num 1\n  ..$ lineend      : chr \"butt\"\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                            :List of 5\n  ..$ fill         : chr \"white\"\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : num 0.545\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                            :List of 11\n  ..$ family       : chr \"\"\n  ..$ face         : chr \"plain\"\n  ..$ colour       : chr \"black\"\n  ..$ size         : num 12\n  ..$ hjust        : num 0.5\n  ..$ vjust        : num 0.5\n  ..$ angle        : num 0\n  ..$ lineheight   : num 0.9\n  ..$ margin       : 'margin' num [1:4] 0points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ title                           : NULL\n $ aspect.ratio                    : NULL\n $ axis.title                      : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.title.x                    :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 3points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x.top                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 3points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x.bottom             : NULL\n $ axis.title.y                    :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 3points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y.left               : NULL\n $ axis.title.y.right              :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 0points 3points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text                       : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.text.x                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 2.4points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top                 :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 2.4points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.bottom              : NULL\n $ axis.text.y                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 1\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 2.4points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y.left                : NULL\n $ axis.text.y.right               :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 0points 2.4points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.theta                 : NULL\n $ axis.text.r                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0.5\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 2.4points 0points 2.4points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks                      :List of 6\n  ..$ colour       : chr \"grey20\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.x                    : NULL\n $ axis.ticks.x.top                : NULL\n $ axis.ticks.x.bottom             : NULL\n $ axis.ticks.y                    : NULL\n $ axis.ticks.y.left               : NULL\n $ axis.ticks.y.right              : NULL\n $ axis.ticks.theta                : NULL\n $ axis.ticks.r                    : NULL\n $ axis.minor.ticks.x.top          : NULL\n $ axis.minor.ticks.x.bottom       : NULL\n $ axis.minor.ticks.y.left         : NULL\n $ axis.minor.ticks.y.right        : NULL\n $ axis.minor.ticks.theta          : NULL\n $ axis.minor.ticks.r              : NULL\n $ axis.ticks.length               : 'simpleUnit' num 0cm\n  ..- attr(*, \"unit\")= int 1\n $ axis.ticks.length.x             : NULL\n $ axis.ticks.length.x.top         : NULL\n $ axis.ticks.length.x.bottom      : NULL\n $ axis.ticks.length.y             : NULL\n $ axis.ticks.length.y.left        : NULL\n $ axis.ticks.length.y.right       : NULL\n $ axis.ticks.length.theta         : NULL\n $ axis.ticks.length.r             : NULL\n $ axis.minor.ticks.length         : 'rel' num 0.75\n $ axis.minor.ticks.length.x       : NULL\n $ axis.minor.ticks.length.x.top   : NULL\n $ axis.minor.ticks.length.x.bottom: NULL\n $ axis.minor.ticks.length.y       : NULL\n $ axis.minor.ticks.length.y.left  : NULL\n $ axis.minor.ticks.length.y.right : NULL\n $ axis.minor.ticks.length.theta   : NULL\n $ axis.minor.ticks.length.r       : NULL\n $ axis.line                       : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.line.x                     : NULL\n $ axis.line.x.top                 : NULL\n $ axis.line.x.bottom              : NULL\n $ axis.line.y                     : NULL\n $ axis.line.y.left                : NULL\n $ axis.line.y.right               : NULL\n $ axis.line.theta                 : NULL\n $ axis.line.r                     : NULL\n $ legend.background               :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.margin                   : 'margin' num [1:4] 6points 6points 6points 6points\n  ..- attr(*, \"unit\")= int 8\n $ legend.spacing                  : 'simpleUnit' num 12points\n  ..- attr(*, \"unit\")= int 8\n $ legend.spacing.x                : NULL\n $ legend.spacing.y                : NULL\n $ legend.key                      : NULL\n $ legend.key.size                 : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height               : NULL\n $ legend.key.width                : NULL\n $ legend.key.spacing              : 'simpleUnit' num 6points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key.spacing.x            : NULL\n $ legend.key.spacing.y            : NULL\n $ legend.frame                    : NULL\n $ legend.ticks                    : NULL\n $ legend.ticks.length             : 'rel' num 0.2\n $ legend.axis.line                : NULL\n $ legend.text                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 0.8\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.position            : NULL\n $ legend.title                    :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.position           : NULL\n $ legend.position                 : chr \"right\"\n $ legend.position.inside          : NULL\n $ legend.direction                : NULL\n $ legend.byrow                    : NULL\n $ legend.justification            : chr \"center\"\n $ legend.justification.top        : NULL\n $ legend.justification.bottom     : NULL\n $ legend.justification.left       : NULL\n $ legend.justification.right      : NULL\n $ legend.justification.inside     : NULL\n $ legend.location                 : NULL\n $ legend.box                      : NULL\n $ legend.box.just                 : NULL\n $ legend.box.margin               : 'margin' num [1:4] 0cm 0cm 0cm 0cm\n  ..- attr(*, \"unit\")= int 1\n $ legend.box.background           : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.box.spacing              : 'simpleUnit' num 12points\n  ..- attr(*, \"unit\")= int 8\n  [list output truncated]\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#a-state-and-county-level-map",
    "href": "ica/ica-spatial.html#a-state-and-county-level-map",
    "title": "\n12  Spatial Viz\n",
    "section": "\n12.7 A State and County-Level Map",
    "text": "12.7 A State and County-Level Map\n\nCodestarbucks_midwest &lt;- starbucks |&gt; \n  filter(State.Province %in% c(\"MN\", \"ND\", \"SD\", \"WI\"))\n\n# Load packages\nlibrary(sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\nCodelibrary(maps)\n\n\nAttaching package: 'maps'\n\n\nThe following object is masked from 'package:purrr':\n\n    map\n\nCode# Get the boundaries\nmidwest_boundaries &lt;- st_as_sf(\n  maps::map(\"county\",\n            region = c(\"minnesota\", \"wisconsin\", \"north dakota\", \"south dakota\"), \n            fill = TRUE, plot = FALSE))\n\nggplot(midwest_boundaries) + \n   geom_sf(fill = \"#CDC7E5\", color = \"#7776BC\") + \n   geom_point(\n     data = starbucks_midwest,\n     aes(x = Longitude, y = Latitude),\n     alpha = 0.7,\n     size = 0.5, \n     color = \"#FF674D\"\n   ) + \n   theme_map()",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#exercise-7-contour-maps",
    "href": "ica/ica-spatial.html#exercise-7-contour-maps",
    "title": "\n12  Spatial Viz\n",
    "section": "\n12.8 Exercise 7: Contour Maps",
    "text": "12.8 Exercise 7: Contour Maps\n\nCode# What changed in the plot?\n# What changed in our code?!\nggplot(cma_boundaries) + \n  geom_sf() + \n  geom_density_2d(\n    data = starbucks_cma,\n    aes(x = Longitude, y = Latitude),\n    size = 0.2,\n    color = \"darkgreen\"\n  ) +\n  coord_sf(xlim = c(-179.14, -50), ylim = c(14.54, 83.11)) +\n  theme_map()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#exercise-8-state-level-choropleth-maps",
    "href": "ica/ica-spatial.html#exercise-8-state-level-choropleth-maps",
    "title": "\n12  Spatial Viz\n",
    "section": "\n12.9 Exercise 8: State-Level Choropleth Maps",
    "text": "12.9 Exercise 8: State-Level Choropleth Maps\n\nCodeelections_by_state &lt;-  read.csv(\"https://mac-stat.github.io/data/election_2020_by_state.csv\")\nelections_by_counties &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n\n# Don't worry about the code!\n\nelections_by_state &lt;- elections_by_state |&gt; \n  filter(state_abbr != \"DC\") |&gt; \n  select(state_name, state_abbr, repub_pct_20) |&gt; \n  mutate(repub_20_categories = \n           cut(repub_pct_20, \n               breaks = seq(30, 70, by = 5), \n               labels = c(\"30-34\", \"35-39\", \"40-44\", \"45-49\",\n                          \"50-54\", \"55-59\", \"60-64\", \"65-70\"), \n               include.lowest = TRUE))\n\nelections_by_counties &lt;- elections_by_counties |&gt; \n  select(state_name, state_abbr, county_name, county_fips,\n          repub_pct_20, median_age, median_rent) |&gt; \n  mutate(repub_20_categories = \n           cut(repub_pct_20, \n               breaks = seq(0, 100, by = 10),\n               labels = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\",\n                          \"50-59\", \"60-69\", \"70-79\", \"80-89\", \"90-100\"),\n               include.lowest = TRUE))\n\nstarbucks_us &lt;- starbucks |&gt; \n  filter(Country == \"US\")\n\nstates_map &lt;- map_data(\"state\")\n\nlibrary(RColorBrewer)\n\n# Note where the dataset, elections_by_state, is used\n# Note where the background map, states_map, is used\nggplot(elections_by_state, aes(map_id = state_name, fill = repub_20_categories)) +\n  geom_map(map = states_map) +\n  expand_limits(x = states_map$long, y = states_map$lat) +\n  theme_map() +\n  scale_fill_manual(values = rev(brewer.pal(8, \"RdBu\")), name = \"% Republican\") +\n  geom_point(\n    data = starbucks_us,\n    aes(x = Longitude, y = Latitude),\n    size = 0.05,\n    alpha = 0.2,\n    inherit.aes = FALSE\n  )",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#exercise-9-county-level-choropleth-maps",
    "href": "ica/ica-spatial.html#exercise-9-county-level-choropleth-maps",
    "title": "\n12  Spatial Viz\n",
    "section": "\n12.10 Exercise 9: County-Level Choropleth Maps",
    "text": "12.10 Exercise 9: County-Level Choropleth Maps\n\nCode# Get the latitude and longitude coordinates of county boundaries\nlibrary(socviz)\ndata(county_map) \n\n# Add 0's at the beginning of any fips_code that's fewer than 5 numbers long\n# Don't worry about the syntax\nelections_by_counties &lt;- elections_by_counties |&gt; \n  mutate(county_fips = as.character(county_fips)) |&gt; \n  mutate(county_fips = \n           ifelse(nchar(county_fips) == 4, paste0(\"0\", county_fips), county_fips))\n\nggplot(elections_by_counties, aes(map_id = county_fips, fill = repub_20_categories)) +\n  geom_map(map = county_map) +\n  scale_fill_manual(values = rev(brewer.pal(10, \"RdBu\")), name = \"% Republican\") +\n  expand_limits(x = county_map$long, y = county_map$lat) +\n  theme_map() +\n  theme(legend.position = \"right\") + \n  coord_equal()",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-spatial.html#exercise-10-play-around",
    "href": "ica/ica-spatial.html#exercise-10-play-around",
    "title": "\n12  Spatial Viz\n",
    "section": "\n12.11 Exercise 10: Play Around!",
    "text": "12.11 Exercise 10: Play Around!\n\nCodelibrary(socviz)\ndata(county_map) \n\nelections_by_counties &lt;- elections_by_counties |&gt; \n  mutate(county_fips = as.character(county_fips)) |&gt; \n  mutate(county_fips = \n           ifelse(nchar(county_fips) == 4, paste0(\"0\", county_fips), county_fips))\n\nggplot(elections_by_counties, aes(map_id = county_fips, fill = median_age)) +\n  geom_map(map = county_map) +\n  scale_fill_gradientn(colors = c(\"#FFD166\", \"#3D3B8E\"), name = \"Median Age\") +\n  expand_limits(x = county_map$long, y = county_map$lat) +\n  theme_map() +\n  theme(legend.position = \"right\") + \n  coord_equal()\n\n\n\n\n\n\nCodeggplot(elections_by_counties, aes(map_id = county_fips, fill = median_rent)) +\n  geom_map(map = county_map) +\n  scale_fill_gradientn(colors = c(\"#D3FFF3\", \"#7F0799\"), name = \"Median Rent\") +\n  expand_limits(x = county_map$long, y = county_map$lat) +\n  theme_map() +\n  theme(legend.position = \"right\") + \n  coord_equal()",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-effective.html",
    "href": "ica/ica-effective.html",
    "title": "\n13  Effective Viz\n",
    "section": "",
    "text": "13.1 Exercise 1: Professionalism",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Effective Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-effective.html#exercise-1-professionalism",
    "href": "ica/ica-effective.html#exercise-1-professionalism",
    "title": "\n13  Effective Viz\n",
    "section": "",
    "text": "13.1.1 Part A\n\nCode# Load tidyverse package for plotting and wrangling\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nCode# Import the data\nweather &lt;- read.csv(\"https://mac-stat.github.io/data/weather_3_locations.csv\") |&gt; \n  mutate(date = as.Date(date))\n\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + \n  geom_point() + \n  labs(x = \"Temperature(Celsius) at 9am\", y = \"Temperature(Celsius) at 3pm\", title = \"Temperature at 3pm vs 9am\", color = \"Location\")  \n\nWarning: Removed 27 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n13.1.2 Part B\n\nCode# Load tidyverse package for plotting and wrangling\nlibrary(tidyverse)\n\n# Import the data\nweather &lt;- read.csv(\"https://mac-stat.github.io/data/weather_3_locations.csv\") |&gt; \n  mutate(date = as.Date(date))\n\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + \n  geom_point() + \n  labs(x = \"Temperature(Celsius) at 9am\", y = \"Temperature(Celsius) at 3pm\", color = \"Location\")\n\nWarning: Removed 27 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\nDot plot comparing temperatures in degrees celsius at 3pm versus 9am, across three different locations.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Effective Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-effective.html#exercise-2-accessibility",
    "href": "ica/ica-effective.html#exercise-2-accessibility",
    "title": "\n13  Effective Viz\n",
    "section": "\n13.2 Exercise 2: Accessibility",
    "text": "13.2 Exercise 2: Accessibility\n\n13.2.1 Part A\n\nCodeggplot(weather, aes(x = temp3pm, fill = location)) + \n  geom_density(alpha = 0.5) + \n  labs(x = \"3pm temperature (Celsius)\")  \n\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_density()`).\n\n\n\n\nDensity plots of 3pm temperatures in 3 Australian locations. Source: https://mac-stat.github.io/data/weather_3_locations.csv\n\n\n\n\n13.2.2 Part B\nThere are several types of colorblindness that would make this graph much more difficult to interpret because the colors can become indistinguishible from each other, which then means that the viewer won’t be able to accurately read which density curve corresponds to which location.\n\n13.2.3 Part C\n\nCodeggplot(weather, aes(x = temp3pm, fill = location)) + \n  geom_density(alpha = 0.5) + \n  labs(x = \"3pm temperature (Celsius)\") + \n  scale_fill_viridis_d()    \n\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_density()`).\n\n\n\n\n\n\n\n\n\nCode# In the color scale line:\n# Change \"fill\" to \"color\" since we use color in the aes()\n# Change \"d\" (discrete) to \"c\" (continuous) since maxtemp is on a continuous scale\nggplot(weather, aes(y = temp3pm, x = temp9am, color = maxtemp)) + \n  geom_point(alpha = 0.5) + \n  labs(x = \"3pm temperature (Celsius)\") + \n  scale_color_viridis_c()\n\nWarning: Removed 27 rows containing missing values or values outside the scale range\n(`geom_point()`).",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Effective Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-effective.html#exercise-3-ethics",
    "href": "ica/ica-effective.html#exercise-3-ethics",
    "title": "\n13  Effective Viz\n",
    "section": "\n13.3 Exercise 3: Ethics",
    "text": "13.3 Exercise 3: Ethics\n\n13.3.1 Part A\nThis climate change plot is misleading because the scale was purposely chosen to obscure any recognizable pattern in the data. The scale of the y-axis does not fit the data. While it is true that the average annual global temperature has increased less than 5 degrees Fahrenheit from 1880-2015, the graph doesn’t allow you to notice that the relative increase during the 20th-21st century is much greater than the increase over the previous years. Furthermore, the scale of the graph implies that anywhere from 0-110 degrees Fahrenheit is even possible to record while life still exists, which it isn’t. In reality, even just a few degrees Fahrenheit makes a huge difference to the climate and the global ecosystem.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Effective Viz</span>"
    ]
  },
  {
    "objectID": "ica/ica-wrangling.html",
    "href": "ica/ica-wrangling.html",
    "title": "\n14  Wrangling\n",
    "section": "",
    "text": "14.1 Exercise 1\nCodelibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nCodeelections &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n\nelections_small &lt;- elections |&gt;\n  select(state_name, county_name, total_votes_20, repub_pct_20, dem_pct_20, total_votes_16, dem_pct_16)\n\nhead(elections_small)\n\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16\n1          24661      23.96\n2          94090      19.57\n3          10390      46.66\n4           8748      21.42\n5          25384       8.47\n6           4701      75.09",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Wrangling</span>"
    ]
  },
  {
    "objectID": "ica/ica-wrangling.html#exercise-2",
    "href": "ica/ica-wrangling.html#exercise-2",
    "title": "\n14  Wrangling\n",
    "section": "\n14.2 Exercise 2",
    "text": "14.2 Exercise 2\n\nCode# Keep only data on counties in Hawaii\nelections_small |&gt;\n  filter(state_name == \"Hawaii\")\n\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1     Hawaii   Hawaii County          87814        30.63      66.88\n2     Hawaii Honolulu County         382114        35.66      62.51\n3     Hawaii    Kauai County          33497        34.58      63.36\n4     Hawaii     Maui County          71044        31.14      66.59\n  total_votes_16 dem_pct_16\n1          64865      63.61\n2         285683      61.48\n3          26335      62.49\n4          51942      64.45\n\nCode# Keep only data for counties in Hawaii and Delaware\nelections_small |&gt; \n  filter(state_name %in% c(\"Hawaii\", \"Delaware\"))\n\n  state_name       county_name total_votes_20 repub_pct_20 dem_pct_20\n1   Delaware       Kent County          87025        47.12      51.19\n2   Delaware New Castle County         287633        30.72      67.81\n3   Delaware     Sussex County         129352        55.07      43.82\n4     Hawaii     Hawaii County          87814        30.63      66.88\n5     Hawaii   Honolulu County         382114        35.66      62.51\n6     Hawaii      Kauai County          33497        34.58      63.36\n7     Hawaii       Maui County          71044        31.14      66.59\n  total_votes_16 dem_pct_16\n1          74253      44.91\n2         261468      62.30\n3         105814      37.17\n4          64865      63.61\n5         285683      61.48\n6          26335      62.49\n7          51942      64.45\n\nCode# Keep only data on counties where the Republican got MORE THAN 93.97% of the vote in 2020\n# THINK: What variable is relevant here?\nelections_small |&gt;\n  filter(repub_pct_20 &gt; 93.97)\n\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1      Texas  Borden County            416        95.43       3.85\n2      Texas    King County            159        94.97       5.03\n3      Texas Roberts County            550        96.18       3.09\n  total_votes_16 dem_pct_16\n1            365       8.49\n2            159       3.14\n3            550       3.64\n\nCode# Keep only data on counties where the Republican got AT LEAST 93.97% of the vote in 2020\n# This should have 1 more row (observation) than your answer above\nelections_small |&gt;\n  filter(repub_pct_20 &gt;= 93.97)\n\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Montana Garfield County            813        93.97       5.04\n2      Texas   Borden County            416        95.43       3.85\n3      Texas     King County            159        94.97       5.03\n4      Texas  Roberts County            550        96.18       3.09\n  total_votes_16 dem_pct_16\n1            715       4.76\n2            365       8.49\n3            159       3.14\n4            550       3.64\n\nCode# Keep only data on counties in Texas where the Democrat got more than 65% of the vote in 2020\n# Do this 2 ways.\n\n# Method 1: 2 filters with 1 condition each\nelections_small |&gt; \n  filter(state_name == \"Texas\") |&gt; \n  filter(dem_pct_20 &gt; 65)\n\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1      Texas  El Paso County         267215        31.56      66.66\n2      Texas Presidio County           2217        32.52      65.99\n3      Texas   Travis County         610349        26.43      71.41\n4      Texas   Zavala County           4379        34.03      65.40\n  total_votes_16 dem_pct_16\n1         210458      69.14\n2           2203      66.18\n3         462511      66.26\n4           3390      77.67\n\nCode# Method 2: 1 filter with 2 conditions\nelections_small |&gt;\n  filter(state_name == \"Texas\", dem_pct_20 &gt; 65)\n\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1      Texas  El Paso County         267215        31.56      66.66\n2      Texas Presidio County           2217        32.52      65.99\n3      Texas   Travis County         610349        26.43      71.41\n4      Texas   Zavala County           4379        34.03      65.40\n  total_votes_16 dem_pct_16\n1         210458      69.14\n2           2203      66.18\n3         462511      66.26\n4           3390      77.67",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Wrangling</span>"
    ]
  },
  {
    "objectID": "ica/ica-wrangling.html#exercise-3",
    "href": "ica/ica-wrangling.html#exercise-3",
    "title": "\n14  Wrangling\n",
    "section": "\n14.3 Exercise 3",
    "text": "14.3 Exercise 3\n\nCode# Arrange the counties in elections_small from lowest to highest percentage of 2020 Republican support\nelections_small |&gt;\n  arrange(repub_pct_20) |&gt;\n  head()\n\n            state_name            county_name total_votes_20 repub_pct_20\n1 District of Columbia   District of Columbia         344356         5.40\n2             Maryland Prince George's County         424855         8.73\n3             Maryland         Baltimore city         237461        10.69\n4             Virginia        Petersburg city          14118        11.22\n5             New York        New York County         694904        12.26\n6           California   San Francisco County         443458        12.72\n  dem_pct_20 total_votes_16 dem_pct_16\n1      92.15         280272      92.85\n2      89.26         351091      89.33\n3      87.28         208980      85.44\n4      87.75          13717      87.52\n5      86.78         591368      87.17\n6      85.27         365295      85.53\n\nCode# Arrange the counties in elections_small from highest to lowest percentage of 2020 Republican support\nelections_small |&gt;\n  arrange(desc(repub_pct_20)) |&gt;\n  head()\n\n  state_name      county_name total_votes_20 repub_pct_20 dem_pct_20\n1      Texas   Roberts County            550        96.18       3.09\n2      Texas    Borden County            416        95.43       3.85\n3      Texas      King County            159        94.97       5.03\n4    Montana  Garfield County            813        93.97       5.04\n5      Texas Glasscock County            653        93.57       5.97\n6   Nebraska     Grant County            402        93.28       4.98\n  total_votes_16 dem_pct_16\n1            550       3.64\n2            365       8.49\n3            159       3.14\n4            715       4.76\n5            602       5.65\n6            394       5.08",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Wrangling</span>"
    ]
  },
  {
    "objectID": "ica/ica-wrangling.html#exercise-4",
    "href": "ica/ica-wrangling.html#exercise-4",
    "title": "\n14  Wrangling\n",
    "section": "\n14.4 Exercise 4",
    "text": "14.4 Exercise 4\n\n14.4.1 Part A\n\nCode# New column diff_20 showing difference between republican percentage of votes and democrat percentage\nelections_small |&gt; \n  mutate(diff_20 = repub_pct_20 - dem_pct_20) |&gt; \n  head()\n\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 diff_20\n1          24661      23.96   44.42\n2          94090      19.57   53.76\n3          10390      46.66    7.66\n4           8748      21.42   57.73\n5          25384       8.47   80.00\n6           4701      75.09  -49.86\n\nCode# New column repub_votes_20 showing amount of votes for republican candidate\nelections_small |&gt; \n  mutate(repub_votes_20 = round(total_votes_20 * repub_pct_20/100)) |&gt; \n  head()\n\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 repub_votes_20\n1          24661      23.96          19839\n2          94090      19.57          83542\n3          10390      46.66           5622\n4           8748      21.42           7525\n5          25384       8.47          24711\n6           4701      75.09           1146\n\nCode# New column repub_win_20 saying if republican won in county T or F\nelections_small |&gt; \n  mutate(repub_win_20 = repub_pct_20 &gt; dem_pct_20) |&gt; \n  head()\n\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 repub_win_20\n1          24661      23.96         TRUE\n2          94090      19.57         TRUE\n3          10390      46.66         TRUE\n4           8748      21.42         TRUE\n5          25384       8.47         TRUE\n6           4701      75.09        FALSE\n\n\n\n14.4.2 Part B\n\nCode# Define a variable that calculates the change in Dem support in 2020 vs 2016\nelections_small |&gt; \n  mutate(dem_support_change = dem_pct_20 - dem_pct_16) |&gt; \n  head()\n\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 dem_support_change\n1          24661      23.96               3.06\n2          94090      19.57               2.84\n3          10390      46.66              -0.87\n4           8748      21.42              -0.72\n5          25384       8.47               1.10\n6           4701      75.09              -0.39\n\nCode# Define a variable that determines whether the Dem support was higher in 2020 than in 2016 (TRUE/FALSE)\nelections_small |&gt;\n  mutate(dem_increase = dem_pct_20 &gt; dem_pct_16) |&gt;\n  head()\n\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 dem_increase\n1          24661      23.96         TRUE\n2          94090      19.57         TRUE\n3          10390      46.66        FALSE\n4           8748      21.42        FALSE\n5          25384       8.47         TRUE\n6           4701      75.09        FALSE",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Wrangling</span>"
    ]
  },
  {
    "objectID": "ica/ica-wrangling.html#exercise-5",
    "href": "ica/ica-wrangling.html#exercise-5",
    "title": "\n14  Wrangling\n",
    "section": "\n14.5 Exercise 5",
    "text": "14.5 Exercise 5\n\n14.5.1 Part A\n\nCode# show only counties in Wisconsin where the democrat won in 2020, sort by total votes from highest to lowest\nelections_small |&gt; \n  filter(state_name == \"Wisconsin\",\n        repub_pct_20 &lt; dem_pct_20) |&gt; \n  arrange(desc(total_votes_20)) |&gt; \n  head()\n\n  state_name       county_name total_votes_20 repub_pct_20 dem_pct_20\n1  Wisconsin  Milwaukee County         458971        29.27      69.13\n2  Wisconsin       Dane County         344791        22.85      75.46\n3  Wisconsin       Rock County          85360        43.51      54.66\n4  Wisconsin  La Crosse County          67884        42.25      55.75\n5  Wisconsin Eau Claire County          58275        43.49      54.26\n6  Wisconsin    Portage County          40603        47.53      50.31\n  total_votes_16 dem_pct_16\n1         434970      66.44\n2         304729      71.38\n3          75043      52.42\n4          62785      51.61\n5          54080      50.43\n6          38123      48.59\n\n\n\n14.5.2 Part B\n\nCode# same as Part A but order of arrange() and filter() are switched - same results\nelections_small |&gt; \n  arrange(desc(total_votes_20)) |&gt; \n  filter(state_name == \"Wisconsin\",\n         repub_pct_20 &lt; dem_pct_20) |&gt;\n head()\n\n  state_name       county_name total_votes_20 repub_pct_20 dem_pct_20\n1  Wisconsin  Milwaukee County         458971        29.27      69.13\n2  Wisconsin       Dane County         344791        22.85      75.46\n3  Wisconsin       Rock County          85360        43.51      54.66\n4  Wisconsin  La Crosse County          67884        42.25      55.75\n5  Wisconsin Eau Claire County          58275        43.49      54.26\n6  Wisconsin    Portage County          40603        47.53      50.31\n  total_votes_16 dem_pct_16\n1         434970      66.44\n2         304729      71.38\n3          75043      52.42\n4          62785      51.61\n5          54080      50.43\n6          38123      48.59\n\n\n\n14.5.3 Part C\nOne advantage of filtering before arranging is that the program only has to run the arrange() function once rather than doing it first and then having to repeat it with the filtering.\n\n14.5.4 Part D\n\nCode# only counties in Delaware, add new column repub_win_20 stating whether republican won, only county name, republican and democrat percentages for 2020, and new repub_win_20 column\nelections_small |&gt;\n  filter(state_name == \"Delaware\") |&gt;\n  mutate(repub_win_20 = repub_pct_20 &gt; dem_pct_20) |&gt;\n  select(county_name, repub_pct_20, dem_pct_20, repub_win_20) |&gt;\n  head()\n\n        county_name repub_pct_20 dem_pct_20 repub_win_20\n1       Kent County        47.12      51.19        FALSE\n2 New Castle County        30.72      67.81        FALSE\n3     Sussex County        55.07      43.82         TRUE\n\n\n\n14.5.5 Part E\n\nCode# same as Part D, but mutate() and select() are switched in the order, which doesn't work because we can't select the repub_win_20 column before we've used mutate() to create it! (code is made into comment so whole document can render)\n\n#elections_small |&gt;\n#  filter(state_name == \"Delaware\") |&gt;\n#  select(county_name, repub_pct_20, dem_pct_20, repub_win_20) |&gt;\n#  mutate(repub_win_20 = repub_pct_20 &gt; dem_pct_20) |&gt;\n#  head()",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Wrangling</span>"
    ]
  },
  {
    "objectID": "ica/ica-wrangling.html#exercise-6",
    "href": "ica/ica-wrangling.html#exercise-6",
    "title": "\n14  Wrangling\n",
    "section": "\n14.6 Exercise 6",
    "text": "14.6 Exercise 6\n\n14.6.1 Part A\n\nCode# only Minnesota counties, only percentage of democratic votes in 2020, sort from highest percent to lowest\nelections_small |&gt;\n  filter(state_name == \"Minnesota\") |&gt;\n  select(county_name, dem_pct_20) |&gt;\n  arrange(desc(dem_pct_20))\n\n                county_name dem_pct_20\n1             Ramsey County      71.50\n2           Hennepin County      70.46\n3               Cook County      65.58\n4          St. Louis County      56.64\n5             Dakota County      55.73\n6            Olmsted County      54.16\n7         Washington County      53.46\n8         Blue Earth County      50.84\n9               Clay County      50.74\n10              Lake County      50.64\n11          Nicollet County      50.31\n12           Carlton County      49.58\n13            Winona County      49.07\n14              Rice County      48.76\n15          Mahnomen County      48.26\n16             Anoka County      47.79\n17          Beltrami County      47.24\n18            Carver County      46.37\n19             Mower County      46.00\n20             Scott County      45.52\n21           Houston County      42.42\n22           Goodhue County      41.23\n23          Freeborn County      40.96\n24            Norman County      40.80\n25            Itasca County      40.61\n26       Koochiching County      38.41\n27          Watonwan County      38.20\n28           Kittson County      38.12\n29           Stevens County      37.80\n30           Stearns County      37.58\n31          Fillmore County      37.48\n32            Steele County      37.47\n33         Kandiyohi County      36.12\n34            Aitkin County      35.98\n35              Lyon County      35.94\n36     Lac qui Parle County      35.79\n37           Wabasha County      35.78\n38             Grant County      35.58\n39          Traverse County      35.46\n40         Big Stone County      35.41\n41        Pennington County      35.29\n42              Pope County      35.27\n43              Polk County      34.88\n44              Cass County      34.68\n45            Wright County      34.49\n46           Hubbard County      34.42\n47             Swift County      34.35\n48         Crow Wing County      34.17\n49           Chisago County      34.15\n50            Becker County      33.96\n51              Pine County      33.87\n52          Le Sueur County      33.73\n53          Chippewa County      33.67\n54            Nobles County      33.65\n55            Waseca County      33.65\n56             Dodge County      33.47\n57        Otter Tail County      32.85\n58            Benton County      32.70\n59           Douglas County      32.56\n60             Brown County      32.48\n61         Sherburne County      32.48\n62         Faribault County      31.98\n63          Red Lake County      31.47\n64          Renville County      30.71\n65            McLeod County      30.64\n66   Yellow Medicine County      30.54\n67           Lincoln County      30.08\n68        Cottonwood County      30.03\n69           Kanabec County      30.02\n70            Martin County      30.02\n71           Jackson County      29.99\n72        Mille Lacs County      29.98\n73            Wilkin County      29.91\n74              Rock County      29.69\n75            Murray County      29.60\n76            Isanti County      29.45\n77            Sibley County      28.60\n78            Meeker County      28.58\n79           Redwood County      28.43\n80 Lake of the Woods County      27.87\n81        Clearwater County      26.76\n82         Pipestone County      26.44\n83            Wadena County      26.35\n84            Roseau County      25.98\n85          Marshall County      25.33\n86              Todd County      24.79\n87          Morrison County      22.33\n\n\n\n14.6.2 Part B\n\nCode# new dataset mn_wi: only counties in Minnesota and Wisconsin, add variable change in democratic vote percentage from 2016 to 2020, sort lowest to highest change in democratic percentage, only include state, county, democratic percentages, change in democratic percentages\n\nmn_wi &lt;- elections_small |&gt;\n  filter(state_name %in% c(\"Minnesota\", \"Wisconsin\")) |&gt;\n  mutate(dem_pct_change = dem_pct_20 - dem_pct_16) |&gt;\n  select(state_name, county_name, dem_pct_16, dem_pct_20, dem_pct_change) |&gt;\n  arrange(dem_pct_change)\n\nhead(mn_wi)\n\n  state_name        county_name dem_pct_16 dem_pct_20 dem_pct_change\n1  Minnesota     Stevens County      39.55      37.80          -1.75\n2  Wisconsin      Forest County      35.12      34.06          -1.06\n3  Wisconsin    Kewaunee County      33.73      32.87          -0.86\n4  Wisconsin       Clark County      31.19      30.37          -0.82\n5  Wisconsin       Adams County      37.40      36.63          -0.77\n6  Wisconsin Trempealeau County      41.57      40.86          -0.71\n\n\n\n14.6.3 Part C\n\nCodeggplot(mn_wi, aes(x = dem_pct_change, fill = state_name)) +\n  geom_density(alpha = 0.5) +\n  scale_fill_viridis_d() +\n  labs(x = \"Change in Percentage of Democratic Votes 2016-2020\", \n       fill = \"State\", \n       title = \"Change in Democratic Vote Percentage 2016 - 2020 in Minnesota vs Wisconsin\")",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Wrangling</span>"
    ]
  },
  {
    "objectID": "ica/ica-wrangling.html#exercise-7",
    "href": "ica/ica-wrangling.html#exercise-7",
    "title": "\n14  Wrangling\n",
    "section": "\n14.7 Exercise 7",
    "text": "14.7 Exercise 7\n\nCode# median percentage of republican votes in 2020\nelections_small |&gt; \n summarize(median(repub_pct_20))\n\n  median(repub_pct_20)\n1                68.29\n\nCode# new variable median_repub defined as median percentage of republican votes 2020 (same code as before, just assigns output to a variable)\nelections_small |&gt; \n  summarize(median_repub = median(repub_pct_20))\n\n  median_repub\n1        68.29\n\nCode# same code but add another variable total_votes which is the sum of the total votes from all counties in 2020\nelections_small |&gt; \n  summarize(median_repub = median(repub_pct_20), total_votes = sum(total_votes_20))\n\n  median_repub total_votes\n1        68.29   157949293",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Wrangling</span>"
    ]
  },
  {
    "objectID": "ica/ica-wrangling.html#exercise-8",
    "href": "ica/ica-wrangling.html#exercise-8",
    "title": "\n14  Wrangling\n",
    "section": "\n14.8 Exercise 8",
    "text": "14.8 Exercise 8\n\nCode# effect of group_by() shown by class()\nelections_small |&gt;\n  class()\n\n[1] \"data.frame\"\n\nCodeelections_small |&gt;\n  group_by(state_name) |&gt;\n  class()\n\n[1] \"grouped_df\" \"tbl_df\"     \"tbl\"        \"data.frame\"\n\nCode# effect of group_by() shown by summarize()\nelections_small |&gt;\n  summarize(median_repub = median(repub_pct_20), total_votes = sum(total_votes_20)) \n\n  median_repub total_votes\n1        68.29   157949293\n\nCodeelections_small |&gt;\n  group_by(state_name) |&gt;\n  summarize(median_repub = median(repub_pct_20), total_votes = sum(total_votes_20)) \n\n# A tibble: 50 × 3\n   state_name           median_repub total_votes\n   &lt;chr&gt;                       &lt;dbl&gt;       &lt;int&gt;\n 1 Alabama                      70.6     2323304\n 2 Arizona                      57.9     3387326\n 3 Arkansas                     72.1     1219069\n 4 California                   44.8    17495906\n 5 Colorado                     56.2     3256953\n 6 Connecticut                  41.0     1824280\n 7 Delaware                     47.1      504010\n 8 District of Columbia          5.4      344356\n 9 Florida                      64.6    11067456\n10 Georgia                      68       4997716\n# ℹ 40 more rows",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Wrangling</span>"
    ]
  },
  {
    "objectID": "ica/ica-wrangling.html#exercise-9",
    "href": "ica/ica-wrangling.html#exercise-9",
    "title": "\n14  Wrangling\n",
    "section": "\n14.9 Exercise 9",
    "text": "14.9 Exercise 9\n\nCode# Sort the *states* from the most to least total votes cast in 2020\nelections_small |&gt;\n  group_by(state_name) |&gt;\n  summarize(total_votes = sum(total_votes_20)) |&gt;\n  arrange(desc(total_votes))\n\n# A tibble: 50 × 2\n   state_name     total_votes\n   &lt;chr&gt;                &lt;int&gt;\n 1 California        17495906\n 2 Texas             11317911\n 3 Florida           11067456\n 4 New York           8616205\n 5 Pennsylvania       6925255\n 6 Illinois           6038850\n 7 Ohio               5922202\n 8 Michigan           5539302\n 9 North Carolina     5524801\n10 Georgia            4997716\n# ℹ 40 more rows\n\nCode# In 2020, what were the total number of votes for the Democratic candidate and the total number of votes for the Republican candidate in each *state*?\nelections_small |&gt;\n  group_by(state_name) |&gt;\n  summarize(total_dem_votes = sum(dem_pct_20 * total_votes_20), total_repub_votes = sum(repub_pct_20 * total_votes_20))\n\n# A tibble: 50 × 3\n   state_name           total_dem_votes total_repub_votes\n   &lt;chr&gt;                          &lt;dbl&gt;             &lt;dbl&gt;\n 1 Alabama                    84966521.        144115325.\n 2 Arizona                   167212561.        166167238.\n 3 Arkansas                   42391888.         76063890.\n 4 California               1110964299.        600603367.\n 5 Colorado                  180439477.        136462476.\n 6 Connecticut               108067747.         71531461.\n 7 Delaware                   29627408.         20060118.\n 8 District of Columbia       31732405.          1859522.\n 9 Florida                   529712890.        566859937.\n10 Georgia                   247365644.        246187098.\n# ℹ 40 more rows\n\nCode# What states did the Democratic candidate win in 2020?\nelections_small |&gt;\n  group_by(state_name) |&gt;\n  summarize(total_dem_votes = sum(dem_pct_20 * total_votes_20), total_repub_votes = sum(repub_pct_20 * total_votes_20)) |&gt;\n  filter(total_dem_votes &gt; total_repub_votes)\n\n# A tibble: 26 × 3\n   state_name           total_dem_votes total_repub_votes\n   &lt;chr&gt;                          &lt;dbl&gt;             &lt;dbl&gt;\n 1 Arizona                   167212561.        166167238.\n 2 California               1110964299.        600603367.\n 3 Colorado                  180439477.        136462476.\n 4 Connecticut               108067747.         71531461.\n 5 Delaware                   29627408.         20060118.\n 6 District of Columbia       31732405.          1859522.\n 7 Georgia                   247365644.        246187098.\n 8 Hawaii                     36612136.         19686564.\n 9 Illinois                  347191761.        244692971.\n10 Maine                      43046558.         35989788.\n# ℹ 16 more rows",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Wrangling</span>"
    ]
  },
  {
    "objectID": "ica/ica-wrangling.html#exercise-10",
    "href": "ica/ica-wrangling.html#exercise-10",
    "title": "\n14  Wrangling\n",
    "section": "\n14.10 Exercise 10",
    "text": "14.10 Exercise 10\n\nCodeworld_cup &lt;- read.csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-29/worldcups.csv\")\n\n# In what years did Brazil win the World Cup?\nworld_cup |&gt;\n  filter(winner == \"Brazil\") |&gt;\n  select(year, winner)\n\n  year winner\n1 1958 Brazil\n2 1962 Brazil\n3 1970 Brazil\n4 1994 Brazil\n5 2002 Brazil\n\nCode# What were the 6 World Cups with the highest attendance?\nworld_cup |&gt;\n  arrange(attendance) |&gt;\n  select(year, host, attendance) |&gt;\n  head()\n\n  year        host attendance\n1 1934       Italy     395000\n2 1930     Uruguay     434000\n3 1938      France     483000\n4 1962       Chile     776000\n5 1958      Sweden     868000\n6 1954 Switzerland     943000\n\nCode# Construct a univariate plot of goals_scored (no wrangling necessary)\n# This provides a visual summary of how the number of goals_scored varies from World Cup to World Cup\nggplot(world_cup, aes(x = goals_scored)) +\n  geom_histogram(fill = \"#EF959C\", color = \"#388697\") +\n  labs(title = \"Number of Goals Scored During World Cup\", x = \"Goals Scored\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\nCode# Let's follow up the plot with some more precise numerical summaries\n# Calculate the min, median, and max number of goals_scored across all World Cups\n# NOTE: Visually compare these numerical summaries to what you observed in the plot\nworld_cup |&gt;\n  summarize(min(goals_scored), median(goals_scored), max(goals_scored))\n\n  min(goals_scored) median(goals_scored) max(goals_scored)\n1                70                  126               171\n\nCode# Construct a bivariate plot of how the number of goals_scored in the World Cup has changed over the years\n# No wrangling necessary\nggplot(world_cup, aes(x = year, y = goals_scored)) +\n  geom_point(color = \"#388697\") +\n  geom_smooth(method = \"lm\", color = \"#EF959C\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\nCode# Our above summaries might be a bit misleading.\n# The number of games played at the World Cup varies.\n# Construct a bivariate plot of how the typical number of goals per game has changed over the years\nworld_cup_per_game &lt;- world_cup |&gt;\n  mutate(goals_per_game = goals_scored / games)\n\nggplot(world_cup_per_game, aes(x = year, y = goals_per_game)) +\n  geom_line()",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Wrangling</span>"
    ]
  },
  {
    "objectID": "ica/ica-dates.html",
    "href": "ica/ica-dates.html",
    "title": "\n15  Dates\n",
    "section": "",
    "text": "15.1 Exercise 1",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Dates</span>"
    ]
  },
  {
    "objectID": "ica/ica-dates.html#exercise-1",
    "href": "ica/ica-dates.html#exercise-1",
    "title": "\n15  Dates\n",
    "section": "",
    "text": "15.1.1 Part A\n\nCodelibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nCodepenguins &lt;- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-07-28/penguins.csv')\n\nRows: 344 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): species, island, sex\ndbl (5): bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, year\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nCodepenguins |&gt;\n  filter(species %in% c(\"Adelie\", \"Chinstrap\")) |&gt;\n  count(species)\n\n# A tibble: 2 × 2\n  species       n\n  &lt;chr&gt;     &lt;int&gt;\n1 Adelie      152\n2 Chinstrap    68\n\nCodepenguins |&gt;\n  filter(species != \"Gentoo\") |&gt;\n  count(species)\n\n# A tibble: 2 × 2\n  species       n\n  &lt;chr&gt;     &lt;int&gt;\n1 Adelie      152\n2 Chinstrap    68\n\n\n\n15.1.2 Part B\n\nCodepenguins_w_body_mass &lt;- penguins |&gt;\n  filter(!is.na(body_mass_g))\n\nnrow(penguins)\n\n[1] 344\n\nCodenrow(penguins_w_body_mass)\n\n[1] 342\n\nCodepenguins_complete &lt;- penguins |&gt;\n  na.omit()\n\nnrow(penguins_complete)\n\n[1] 333\n\n\n\n15.1.3 Part C\nna.omit() should only be used in very specific circumstances because it eliminates data sets with any NA values, so it can eliminate useful data. If a data point is NA for only one variable and we aren’t looking at that, na.omit() will take it out and slightly skew our data for a reason that wouldn’t have affected the observations we’re looking for. NA values should for the most part only be omitted when they are in columns we aren’t using.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Dates</span>"
    ]
  },
  {
    "objectID": "ica/ica-dates.html#exercise-2",
    "href": "ica/ica-dates.html#exercise-2",
    "title": "\n15  Dates\n",
    "section": "\n15.2 Exercise 2",
    "text": "15.2 Exercise 2\n\nCodenames(penguins)\n\n[1] \"species\"           \"island\"            \"bill_length_mm\"   \n[4] \"bill_depth_mm\"     \"flipper_length_mm\" \"body_mass_g\"      \n[7] \"sex\"               \"year\"             \n\nCode# Use a shortcut to keep everything but the year and island variables\n\npenguins |&gt;\n  select(-year, -island)\n\n# A tibble: 344 × 6\n   species bill_length_mm bill_depth_mm flipper_length_mm body_mass_g sex   \n   &lt;chr&gt;            &lt;dbl&gt;         &lt;dbl&gt;             &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt; \n 1 Adelie            39.1          18.7               181        3750 male  \n 2 Adelie            39.5          17.4               186        3800 female\n 3 Adelie            40.3          18                 195        3250 female\n 4 Adelie            NA            NA                  NA          NA &lt;NA&gt;  \n 5 Adelie            36.7          19.3               193        3450 female\n 6 Adelie            39.3          20.6               190        3650 male  \n 7 Adelie            38.9          17.8               181        3625 female\n 8 Adelie            39.2          19.6               195        4675 male  \n 9 Adelie            34.1          18.1               193        3475 &lt;NA&gt;  \n10 Adelie            42            20.2               190        4250 &lt;NA&gt;  \n# ℹ 334 more rows\n\nCode# Use a shortcut to keep only species and the penguin characteristics measured in mm\n\npenguins |&gt;\n  select(species, contains(\"mm\"))\n\n# A tibble: 344 × 4\n   species bill_length_mm bill_depth_mm flipper_length_mm\n   &lt;chr&gt;            &lt;dbl&gt;         &lt;dbl&gt;             &lt;dbl&gt;\n 1 Adelie            39.1          18.7               181\n 2 Adelie            39.5          17.4               186\n 3 Adelie            40.3          18                 195\n 4 Adelie            NA            NA                  NA\n 5 Adelie            36.7          19.3               193\n 6 Adelie            39.3          20.6               190\n 7 Adelie            38.9          17.8               181\n 8 Adelie            39.2          19.6               195\n 9 Adelie            34.1          18.1               193\n10 Adelie            42            20.2               190\n# ℹ 334 more rows\n\nCode# Use a shortcut to keep only species and bill-related measurements\n\npenguins |&gt;\n  select(species, contains(\"bill\"))\n\n# A tibble: 344 × 3\n   species bill_length_mm bill_depth_mm\n   &lt;chr&gt;            &lt;dbl&gt;         &lt;dbl&gt;\n 1 Adelie            39.1          18.7\n 2 Adelie            39.5          17.4\n 3 Adelie            40.3          18  \n 4 Adelie            NA            NA  \n 5 Adelie            36.7          19.3\n 6 Adelie            39.3          20.6\n 7 Adelie            38.9          17.8\n 8 Adelie            39.2          19.6\n 9 Adelie            34.1          18.1\n10 Adelie            42            20.2\n# ℹ 334 more rows\n\nCode# Use a shortcut to keep only species and the length-related characteristics\n\npenguins |&gt;\n  select(species, contains(\"length\"))\n\n# A tibble: 344 × 3\n   species bill_length_mm flipper_length_mm\n   &lt;chr&gt;            &lt;dbl&gt;             &lt;dbl&gt;\n 1 Adelie            39.1               181\n 2 Adelie            39.5               186\n 3 Adelie            40.3               195\n 4 Adelie            NA                  NA\n 5 Adelie            36.7               193\n 6 Adelie            39.3               190\n 7 Adelie            38.9               181\n 8 Adelie            39.2               195\n 9 Adelie            34.1               193\n10 Adelie            42                 190\n# ℹ 334 more rows",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Dates</span>"
    ]
  },
  {
    "objectID": "ica/ica-dates.html#exercise-3",
    "href": "ica/ica-dates.html#exercise-3",
    "title": "\n15  Dates\n",
    "section": "\n15.3 Exercise 3",
    "text": "15.3 Exercise 3\n\nCode# Change this code to sort the penguins by species, and then island name\n# NOTE: The first row should be an Adelie penguin living on Biscoe island\npenguins |&gt; \n  arrange(species) |&gt;\n  arrange(island)\n\n# A tibble: 344 × 8\n   species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;chr&gt;   &lt;chr&gt;           &lt;dbl&gt;         &lt;dbl&gt;             &lt;dbl&gt;       &lt;dbl&gt;\n 1 Adelie  Biscoe           37.8          18.3               174        3400\n 2 Adelie  Biscoe           37.7          18.7               180        3600\n 3 Adelie  Biscoe           35.9          19.2               189        3800\n 4 Adelie  Biscoe           38.2          18.1               185        3950\n 5 Adelie  Biscoe           38.8          17.2               180        3800\n 6 Adelie  Biscoe           35.3          18.9               187        3800\n 7 Adelie  Biscoe           40.6          18.6               183        3550\n 8 Adelie  Biscoe           40.5          17.9               187        3200\n 9 Adelie  Biscoe           37.9          18.6               172        3150\n10 Adelie  Biscoe           40.5          18.9               180        3950\n# ℹ 334 more rows\n# ℹ 2 more variables: sex &lt;chr&gt;, year &lt;dbl&gt;\n\nCode# Change this code to count the number of male/female penguins observed for each species\npenguins |&gt; \n  count(species, sex)\n\n# A tibble: 8 × 3\n  species   sex        n\n  &lt;chr&gt;     &lt;chr&gt;  &lt;int&gt;\n1 Adelie    female    73\n2 Adelie    male      73\n3 Adelie    &lt;NA&gt;       6\n4 Chinstrap female    34\n5 Chinstrap male      34\n6 Gentoo    female    58\n7 Gentoo    male      61\n8 Gentoo    &lt;NA&gt;       5\n\nCode# Change this code to calculate the average body mass by species and sex\npenguins |&gt; \n  group_by(species) |&gt; \n  summarize(mean = mean(body_mass_g, na.rm = TRUE))\n\n# A tibble: 3 × 2\n  species    mean\n  &lt;chr&gt;     &lt;dbl&gt;\n1 Adelie    3701.\n2 Chinstrap 3733.\n3 Gentoo    5076.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Dates</span>"
    ]
  },
  {
    "objectID": "ica/ica-dates.html#exercise-4-dates",
    "href": "ica/ica-dates.html#exercise-4-dates",
    "title": "\n15  Dates\n",
    "section": "\n15.4 Exercise 4: Dates",
    "text": "15.4 Exercise 4: Dates\n\nCode# Get today's date\nas.Date(today())\n\n[1] \"2025-03-13\"\n\nCode# Let's store this as \"today\" so we can work with it below\ntoday &lt;- as.Date(today())\n\n# Check out the class of this object\nclass(today)\n\n[1] \"Date\"\n\nCode# year of today's date\nyear(today)\n\n[1] 2025\n\nCode# month number of today's date\nmonth(today)\n\n[1] 3\n\nCode# month name of today, shows levels - order - of different months\nmonth(today, label = TRUE)\n\n[1] Mar\n12 Levels: Jan &lt; Feb &lt; Mar &lt; Apr &lt; May &lt; Jun &lt; Jul &lt; Aug &lt; Sep &lt; ... &lt; Dec\n\nCode# week number out of year of today\nweek(today)\n\n[1] 11\n\nCode# day number of the month of today\nmday(today)\n\n[1] 13\n\nCode# day number of the year of today\nyday(today)  \n\n[1] 72\n\nCode# day number of the week of today\nwday(today)\n\n[1] 5\n\nCode# abbr. day of the week of today with levels/order of days of the week\nwday(today, label = TRUE)\n\n[1] Thu\nLevels: Sun &lt; Mon &lt; Tue &lt; Wed &lt; Thu &lt; Fri &lt; Sat\n\nCode# is today after or equal to 2/14 true or false, is today before 2/14 true or false\ntoday &gt;= ymd(\"2024-02-14\")\n\n[1] TRUE\n\nCodetoday &lt; ymd(\"2024-02-14\")\n\n[1] FALSE",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Dates</span>"
    ]
  },
  {
    "objectID": "ica/ica-dates.html#exercise-5-warming-up",
    "href": "ica/ica-dates.html#exercise-5-warming-up",
    "title": "\n15  Dates\n",
    "section": "\n15.5 Exercise 5: Warming Up",
    "text": "15.5 Exercise 5: Warming Up\n\nCodelibrary(mosaic)\n\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\n\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\n\n\nAttaching package: 'mosaic'\n\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n\nCodedata(\"Birthdays\")\nhead(Birthdays)\n\n  state year month day       date wday births\n1    AK 1969     1   1 1969-01-01  Wed     14\n2    AL 1969     1   1 1969-01-01  Wed    174\n3    AR 1969     1   1 1969-01-01  Wed     78\n4    AZ 1969     1   1 1969-01-01  Wed     84\n5    CA 1969     1   1 1969-01-01  Wed    824\n6    CO 1969     1   1 1969-01-01  Wed    100\n\nCode# How many days of data do we have for each state?\nBirthdays |&gt;\n  filter(state == \"CA\") |&gt;\n  nrow()\n\n[1] 7325\n\nCode# How many total births were there in this time period?\nBirthdays |&gt;\n  summarise(sum(births))\n\n  sum(births)\n1    70486538\n\nCode# How many total births were there per state in this time period, sorted from low to high?\nBirthdays |&gt;\n  group_by(state) |&gt;\n  summarise(total = sum(births)) |&gt;\n  arrange(total)\n\n# A tibble: 51 × 2\n   state  total\n   &lt;chr&gt;  &lt;int&gt;\n 1 VT    147886\n 2 WY    154019\n 3 AK    185385\n 4 DE    188705\n 5 SD    235734\n 6 ND    238696\n 7 NV    241470\n 8 MT    253884\n 9 NH    264984\n10 RI    265038\n# ℹ 41 more rows",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Dates</span>"
    ]
  },
  {
    "objectID": "ica/ica-dates.html#exercise-6-homework-reprise",
    "href": "ica/ica-dates.html#exercise-6-homework-reprise",
    "title": "\n15  Dates\n",
    "section": "\n15.6 Exercise 6: Homework Reprise",
    "text": "15.6 Exercise 6: Homework Reprise\n\nCodedaily_births &lt;- Birthdays |&gt;\n  group_by(date, wday) |&gt;\n  summarise(total_births = sum(births))\n\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n\nCodeggplot(daily_births, aes(x = date, y = total_births, color = wday)) +\n  geom_point() +\n  scale_fill_viridis_d() +\n  labs(title = \"US Births Per Day Over Time\", x = \"Date\", y = \"Number of Births\", color = \"Day of the Week\")",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Dates</span>"
    ]
  },
  {
    "objectID": "ica/ica-dates.html#exercise-7-wrangle-plot",
    "href": "ica/ica-dates.html#exercise-7-wrangle-plot",
    "title": "\n15  Dates\n",
    "section": "\n15.7 Exercise 7: Wrangle & Plot",
    "text": "15.7 Exercise 7: Wrangle & Plot\n\n15.7.1 Part A\n\nCode# total births for each month/year Jan 1969, plot births by month\nmonth_year_births &lt;- daily_births |&gt;\n  mutate(year = year(date)) |&gt;\n  mutate(month = month(date, label = TRUE)) |&gt;\n  mutate(date = paste(month, year)) |&gt;\n  group_by(date, month) |&gt;\n  summarise(all_births = sum(total_births))\n\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n\nCodeggplot(month_year_births, aes(x = date, y = all_births, color = month)) +\n  geom_point()\n\n\n\n\n\n\n\nThere doesn’t seem to be any connection between the month or year and the total number of births.\n\n15.7.2 Part B\n\nCode# 1988 births per week for each state\nbirths_1988 &lt;- Birthdays |&gt;\n  filter(year == 1988) |&gt;\n  mutate(week = week(date)) |&gt;\n  filter(week != 53) |&gt;\n  group_by(week, state) |&gt;\n  summarise(births_per_week = sum(births))\n\n`summarise()` has grouped output by 'week'. You can override using the\n`.groups` argument.\n\nCodeggplot(births_1988, aes(x = week, y = births_per_week, color = state)) +\n  geom_line()\n\n\n\n\n\n\nCodeggplot(births_1988, aes(x = week, y = births_per_week)) +\n  geom_line() +\n  facet_wrap(~state)\n\n\n\n\n\n\n\nLooking at the graphs with the states differentiated by color and by facets, states like California, Texas, and New York have the highest birth rates, with California as the main outlier. They are higher populated states so it makes sense that their birth rates are higher. There is a slight spike around week 35-40, and this pattern is most recognizable among states with higher births per week, but there aren’t any other clear patterns.\n\n15.7.3 Part C\n\nCodeBirthdays |&gt;\n  filter(year == 1988) |&gt;\n  filter(state == c(\"MN\", \"LA\")) |&gt;\n  mutate(week = week(date)) |&gt;\n  filter(week != 53) |&gt;\n  group_by(week, state) |&gt;\n  summarise(births_per_week = sum(births)) |&gt;\n  ggplot(aes(x = week, y = births_per_week, color = state)) +\n  geom_line()\n\n`summarise()` has grouped output by 'week'. You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\n\nThese two states have pretty much identical birthrate patterns. During the first ten weeks of the year and the latter half of the year Louisiana has a consistently higher birth rate.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Dates</span>"
    ]
  },
  {
    "objectID": "ica/ica-dates.html#exercise-8",
    "href": "ica/ica-dates.html#exercise-8",
    "title": "\n15  Dates\n",
    "section": "\n15.8 Exercise 8",
    "text": "15.8 Exercise 8\n\n15.8.1 Part A\n\nCodebirths_MA &lt;- Birthdays |&gt;\n  filter(state == \"MA\") |&gt;\n  filter(year == 1979) |&gt;\n  arrange(desc(births))\n\n\n\n15.8.2 Part B\n\nCodeBirthdays |&gt;\n  filter(year == \"1979\") |&gt;\n  filter(month == \"9\") |&gt;\n  filter(day == c(\"9\", \"10\", \"11\", \"12\")) |&gt;\n  group_by(state) |&gt;\n  summarise(total = sum(births)) |&gt;\n  arrange(desc(total)) |&gt;\n  head(5)\n\nWarning: There was 1 warning in `filter()`.\nℹ In argument: `day == c(\"9\", \"10\", \"11\", \"12\")`.\nCaused by warning in `day == c(\"9\", \"10\", \"11\", \"12\")`:\n! longer object length is not a multiple of shorter object length\n\n\n# A tibble: 5 × 2\n  state total\n  &lt;chr&gt; &lt;int&gt;\n1 CA     2138\n2 NY     1354\n3 IL     1139\n4 PA      974\n5 MI      807",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Dates</span>"
    ]
  },
  {
    "objectID": "ica/ica-reshaping.html",
    "href": "ica/ica-reshaping.html",
    "title": "\n16  Reshaping\n",
    "section": "",
    "text": "16.1 Exercise 1: What’s the problem?\nCodesleep_wide &lt;- read.csv(\"https://mac-stat.github.io/data/sleep_wide.csv\")\n\nhead(sleep_wide)\n\n  Subject  day_0  day_1  day_2  day_3  day_4  day_5  day_6  day_7  day_8  day_9\n1     308 249.56 258.70 250.80 321.44 356.85 414.69 382.20 290.15 430.59 466.35\n2     309 222.73 205.27 202.98 204.71 207.72 215.96 213.63 217.73 224.30 237.31\n3     310 199.05 194.33 234.32 232.84 229.31 220.46 235.42 255.75 261.01 247.52\n4     330 321.54 300.40 283.86 285.13 285.80 297.59 280.24 318.26 305.35 354.05\n5     331 287.61 285.00 301.82 320.12 316.28 293.32 290.08 334.82 293.75 371.58\n6     332 234.86 242.81 272.96 309.77 317.46 310.00 454.16 346.83 330.30 253.86",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Reshaping</span>"
    ]
  },
  {
    "objectID": "ica/ica-reshaping.html#exercise-1-whats-the-problem",
    "href": "ica/ica-reshaping.html#exercise-1-whats-the-problem",
    "title": "\n16  Reshaping\n",
    "section": "",
    "text": "16.1.1 Part A\nThe units of observation are people who participated in the sleep study.\n\n16.1.2 Part B\ncolumns: subject, reaction time, day number\npivot_longer()",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Reshaping</span>"
    ]
  },
  {
    "objectID": "ica/ica-reshaping.html#exercise-2-pivot-longer",
    "href": "ica/ica-reshaping.html#exercise-2-pivot-longer",
    "title": "\n16  Reshaping\n",
    "section": "\n16.2 Exercise 2: Pivot Longer",
    "text": "16.2 Exercise 2: Pivot Longer\n\n16.2.1 Part A\n\nCodelibrary(data.table)\n\n\nAttaching package: 'data.table'\n\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nCodelibrary(tidyr)\n\nsleep_long &lt;- sleep_wide |&gt;\n  pivot_longer(cols = -Subject, names_to = \"Day\", values_to = \"reaction_time\")\n\n\n\n16.2.2 Part B\n\nCodesleep_long &lt;- sleep_wide |&gt;\n  pivot_longer(cols = -Subject,\n               names_to = \"day\",\n               names_prefix = \"day_\",\n               values_to = \"reaction_time\")\n\nhead(sleep_long)\n\n# A tibble: 6 × 3\n  Subject day   reaction_time\n    &lt;int&gt; &lt;chr&gt;         &lt;dbl&gt;\n1     308 0              250.\n2     308 1              259.\n3     308 2              251.\n4     308 3              321.\n5     308 4              357.\n6     308 5              415.\n\n\nThe ‘names_prefix’ value took away the ‘day_’ from the values in the day column so they’re just numbers.\n\n16.2.3 Part C\n\nCodeggplot(sleep_long, aes(x = day, y = reaction_time, color = Subject)) +\n  geom_line()\n\n\n\n\n\n\n\n‘day’ is a character, and it would work better if it were an integer, and ‘Subject’ is an integer and it would work better if it were a character. The numerical value of the subject is irrelevant, each subject just needs to be differentiated in some way; whereas the days of the week should correspond to their numerical order.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Reshaping</span>"
    ]
  },
  {
    "objectID": "ica/ica-reshaping.html#exercise-3-changing-variable-classes-plotting",
    "href": "ica/ica-reshaping.html#exercise-3-changing-variable-classes-plotting",
    "title": "\n16  Reshaping\n",
    "section": "\n16.3 Exercise 3: Changing Variable Classes & Plotting",
    "text": "16.3 Exercise 3: Changing Variable Classes & Plotting\n\nCodesleep_long &lt;- sleep_wide |&gt;\n  pivot_longer(cols = -Subject,\n               names_to = \"day\",\n               names_prefix = \"day_\",\n               values_to = \"reaction_time\") |&gt; \n  mutate(Subject = as.factor(Subject), day = as.numeric(day))\n\n# Check it out\n# Same data, different class\nhead(sleep_long)\n\n# A tibble: 6 × 3\n  Subject   day reaction_time\n  &lt;fct&gt;   &lt;dbl&gt;         &lt;dbl&gt;\n1 308         0          250.\n2 308         1          259.\n3 308         2          251.\n4 308         3          321.\n5 308         4          357.\n6 308         5          415.\n\n\n\n16.3.1 Part A\n\nCode# Make a line plot of reaction time by day for each subject\n# Put these all on the same frame\nggplot(sleep_long, aes(x = day, y = reaction_time, color = Subject)) +\n  geom_line() \n\n\n\n\n\n\nCode# Make a line plot of reaction time by day for each subject\n# Put these all on separate frames (one per subject)\nggplot(sleep_long, aes(x = day, y = reaction_time)) +\n  geom_line() +\n  facet_wrap(~Subject) +\n  geom_smooth()\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n16.3.2 Part B\nWhile there is a lot of variation from subject to subject, for the most part there is a positive relationship between days since sleep and reaction time, meaning the less sleep participants got the slower their reactions were.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Reshaping</span>"
    ]
  },
  {
    "objectID": "ica/ica-reshaping.html#exercise-4-pivot-wider",
    "href": "ica/ica-reshaping.html#exercise-4-pivot-wider",
    "title": "\n16  Reshaping\n",
    "section": "\n16.4 Exercise 4: Pivot Wider",
    "text": "16.4 Exercise 4: Pivot Wider\n\n16.4.1 Part A\n\nCodesleep_long |&gt;\n  pivot_wider(names_from = day, values_from = reaction_time) |&gt;\n  head()\n\n# A tibble: 6 × 11\n  Subject   `0`   `1`   `2`   `3`   `4`   `5`   `6`   `7`   `8`   `9`\n  &lt;fct&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 308      250.  259.  251.  321.  357.  415.  382.  290.  431.  466.\n2 309      223.  205.  203.  205.  208.  216.  214.  218.  224.  237.\n3 310      199.  194.  234.  233.  229.  220.  235.  256.  261.  248.\n4 330      322.  300.  284.  285.  286.  298.  280.  318.  305.  354.\n5 331      288.  285   302.  320.  316.  293.  290.  335.  294.  372.\n6 332      235.  243.  273.  310.  317.  310   454.  347.  330.  254.\n\n\n\n16.4.2 Part B\n\nCodesleep_long |&gt;\n  pivot_wider(names_from = day, values_from = reaction_time, names_prefix = \"day_\") |&gt;\n  head()\n\n# A tibble: 6 × 11\n  Subject day_0 day_1 day_2 day_3 day_4 day_5 day_6 day_7 day_8 day_9\n  &lt;fct&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 308      250.  259.  251.  321.  357.  415.  382.  290.  431.  466.\n2 309      223.  205.  203.  205.  208.  216.  214.  218.  224.  237.\n3 310      199.  194.  234.  233.  229.  220.  235.  256.  261.  248.\n4 330      322.  300.  284.  285.  286.  298.  280.  318.  305.  354.\n5 331      288.  285   302.  320.  316.  293.  290.  335.  294.  372.\n6 332      235.  243.  273.  310.  317.  310   454.  347.  330.  254.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Reshaping</span>"
    ]
  },
  {
    "objectID": "ica/ica-reshaping.html#exercise-5-practice-with-billboard-charts",
    "href": "ica/ica-reshaping.html#exercise-5-practice-with-billboard-charts",
    "title": "\n16  Reshaping\n",
    "section": "\n16.5 Exercise 5: Practice with Billboard Charts",
    "text": "16.5 Exercise 5: Practice with Billboard Charts\n\nCode# Load data\nlibrary(tidyr)\ndata(\"billboard\")\n\n# Check it out\nhead(billboard)\n\n# A tibble: 6 × 79\n  artist      track date.entered   wk1   wk2   wk3   wk4   wk5   wk6   wk7   wk8\n  &lt;chr&gt;       &lt;chr&gt; &lt;date&gt;       &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 2 Pac       Baby… 2000-02-26      87    82    72    77    87    94    99    NA\n2 2Ge+her     The … 2000-09-02      91    87    92    NA    NA    NA    NA    NA\n3 3 Doors Do… Kryp… 2000-04-08      81    70    68    67    66    57    54    53\n4 3 Doors Do… Loser 2000-10-21      76    76    72    69    67    65    55    59\n5 504 Boyz    Wobb… 2000-04-15      57    34    25    17    17    31    36    49\n6 98^0        Give… 2000-08-19      51    39    34    26    26    19     2     2\n# ℹ 68 more variables: wk9 &lt;dbl&gt;, wk10 &lt;dbl&gt;, wk11 &lt;dbl&gt;, wk12 &lt;dbl&gt;,\n#   wk13 &lt;dbl&gt;, wk14 &lt;dbl&gt;, wk15 &lt;dbl&gt;, wk16 &lt;dbl&gt;, wk17 &lt;dbl&gt;, wk18 &lt;dbl&gt;,\n#   wk19 &lt;dbl&gt;, wk20 &lt;dbl&gt;, wk21 &lt;dbl&gt;, wk22 &lt;dbl&gt;, wk23 &lt;dbl&gt;, wk24 &lt;dbl&gt;,\n#   wk25 &lt;dbl&gt;, wk26 &lt;dbl&gt;, wk27 &lt;dbl&gt;, wk28 &lt;dbl&gt;, wk29 &lt;dbl&gt;, wk30 &lt;dbl&gt;,\n#   wk31 &lt;dbl&gt;, wk32 &lt;dbl&gt;, wk33 &lt;dbl&gt;, wk34 &lt;dbl&gt;, wk35 &lt;dbl&gt;, wk36 &lt;dbl&gt;,\n#   wk37 &lt;dbl&gt;, wk38 &lt;dbl&gt;, wk39 &lt;dbl&gt;, wk40 &lt;dbl&gt;, wk41 &lt;dbl&gt;, wk42 &lt;dbl&gt;,\n#   wk43 &lt;dbl&gt;, wk44 &lt;dbl&gt;, wk45 &lt;dbl&gt;, wk46 &lt;dbl&gt;, wk47 &lt;dbl&gt;, wk48 &lt;dbl&gt;, …\n\n\n\n16.5.1 Part A\n\nCodeggplot(billboard, aes(x = wk1, y = wk2)) +\n  geom_point() +\n  geom_abline(intercept = 0, slope = 1)\n\nWarning: Removed 5 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nMost songs didn’t improve their ranking from week 1 to 2. The higher a song’s ranking during week 1, the more likely it was for it to keep up an equal ranking week 2.\n\n16.5.2 Part B\n\nCodebillboard |&gt;\n  mutate(improve = wk1 &lt; wk2) |&gt;\n  filter(improve == \"TRUE\")\n\n# A tibble: 7 × 80\n  artist      track date.entered   wk1   wk2   wk3   wk4   wk5   wk6   wk7   wk8\n  &lt;chr&gt;       &lt;chr&gt; &lt;date&gt;       &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 Carey, Mar… Cryb… 2000-06-24      28    34    48    62    77    90    95    NA\n2 Clark, Ter… A Li… 2000-12-16      75    82    88    96    99    99    NA    NA\n3 Diffie, Joe The … 2000-01-01      98   100   100    90    93    94    NA    NA\n4 Hart, Beth  L.A.… 1999-11-27      99   100    98    99    99    99    98    90\n5 Jay-Z       Hey … 2000-08-12      98   100    98    94    83    83    80    78\n6 Lil' Zane   Call… 2000-07-29      83    89    57    40    34    21    33    46\n7 Pearl Jam   Noth… 2000-05-13      49    70    84    89    93    91    NA    NA\n# ℹ 69 more variables: wk9 &lt;dbl&gt;, wk10 &lt;dbl&gt;, wk11 &lt;dbl&gt;, wk12 &lt;dbl&gt;,\n#   wk13 &lt;dbl&gt;, wk14 &lt;dbl&gt;, wk15 &lt;dbl&gt;, wk16 &lt;dbl&gt;, wk17 &lt;dbl&gt;, wk18 &lt;dbl&gt;,\n#   wk19 &lt;dbl&gt;, wk20 &lt;dbl&gt;, wk21 &lt;dbl&gt;, wk22 &lt;dbl&gt;, wk23 &lt;dbl&gt;, wk24 &lt;dbl&gt;,\n#   wk25 &lt;dbl&gt;, wk26 &lt;dbl&gt;, wk27 &lt;dbl&gt;, wk28 &lt;dbl&gt;, wk29 &lt;dbl&gt;, wk30 &lt;dbl&gt;,\n#   wk31 &lt;dbl&gt;, wk32 &lt;dbl&gt;, wk33 &lt;dbl&gt;, wk34 &lt;dbl&gt;, wk35 &lt;dbl&gt;, wk36 &lt;dbl&gt;,\n#   wk37 &lt;dbl&gt;, wk38 &lt;dbl&gt;, wk39 &lt;dbl&gt;, wk40 &lt;dbl&gt;, wk41 &lt;dbl&gt;, wk42 &lt;dbl&gt;,\n#   wk43 &lt;dbl&gt;, wk44 &lt;dbl&gt;, wk45 &lt;dbl&gt;, wk46 &lt;dbl&gt;, wk47 &lt;dbl&gt;, wk48 &lt;dbl&gt;, …\n\n\n\n16.5.3 Part C\n\nCodenov_1999 &lt;- billboard |&gt;\n  filter(date.entered == \"1999-11-06\") |&gt;\n  select(-track, -date.entered)\n\n\n\n16.5.4 Part D\n\nCodenov_1999 |&gt;\n  pivot_longer(cols = -artist,\n               names_to = \"week\",\n               names_prefix = \"wk\",\n               values_to = \"ranking\") |&gt;\n  mutate(week = as.numeric(week)) |&gt;\n  ggplot(aes(x = week, y = ranking, color = artist)) +\n  geom_line()\n\nWarning: Removed 79 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\n\n\n\nThis visualization shows that the Counting Crows song started at 80, then steeply declined for about 12 weeks, and then increased sharply until week 20. The Faith Hill Song started similarly, but continued to lower in ranking number and bottomed out around 3 before steadily increasing back up to 50 at week 50.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Reshaping</span>"
    ]
  },
  {
    "objectID": "ica/ica-reshaping.html#exercise-6-practice-with-the-daily-show",
    "href": "ica/ica-reshaping.html#exercise-6-practice-with-the-daily-show",
    "title": "\n16  Reshaping\n",
    "section": "\n16.6 Exercise 6: Practice with the Daily Show",
    "text": "16.6 Exercise 6: Practice with the Daily Show\n\nCodelibrary(fivethirtyeight)\ndata(\"daily_show_guests\")\ndaily &lt;- daily_show_guests\n\n\n\n16.6.1 Part A\n\nCodehead(daily)\n\n# A tibble: 6 × 5\n   year google_knowledge_occupation show       group  raw_guest_list  \n  &lt;int&gt; &lt;chr&gt;                       &lt;date&gt;     &lt;chr&gt;  &lt;chr&gt;           \n1  1999 actor                       1999-01-11 Acting Michael J. Fox  \n2  1999 comedian                    1999-01-12 Comedy Sandra Bernhard \n3  1999 television actress          1999-01-13 Acting Tracey Ullman   \n4  1999 film actress                1999-01-14 Acting Gillian Anderson\n5  1999 actor                       1999-01-18 Acting David Alan Grier\n6  1999 actor                       1999-01-19 Acting William Baldwin \n\nCodedaily |&gt;\n  count(raw_guest_list) |&gt;\n  arrange(desc(n)) |&gt;\n  head(15)\n\n# A tibble: 15 × 2\n   raw_guest_list        n\n   &lt;chr&gt;             &lt;int&gt;\n 1 Fareed Zakaria       19\n 2 Denis Leary          17\n 3 Brian Williams       16\n 4 Paul Rudd            13\n 5 Ricky Gervais        13\n 6 Tom Brokaw           12\n 7 Bill O'Reilly        10\n 8 Reza Aslan           10\n 9 Richard Lewis        10\n10 Will Ferrell         10\n11 Sarah Vowell          9\n12 Adam Sandler          8\n13 Ben Affleck           8\n14 Louis C.K.            8\n15 Maggie Gyllenhaal     8\n\n\n\n16.6.2 Part B\n\nCodedaily |&gt;\n  count(year, raw_guest_list) |&gt;\n  group_by(raw_guest_list) |&gt;\n  mutate(total_number = sum(n)) |&gt;\n  pivot_wider(names_from = year, values_from = n, values_fill = 0) |&gt;\n  arrange(desc(total_number)) |&gt;\n  head(15)\n\n# A tibble: 15 × 19\n# Groups:   raw_guest_list [15]\n   raw_guest_list  total_number `1999` `2000` `2001` `2002` `2003` `2004` `2005`\n   &lt;chr&gt;                  &lt;int&gt;  &lt;int&gt;  &lt;int&gt;  &lt;int&gt;  &lt;int&gt;  &lt;int&gt;  &lt;int&gt;  &lt;int&gt;\n 1 Fareed Zakaria            19      0      0      1      0      1      2      2\n 2 Denis Leary               17      1      0      1      2      1      0      0\n 3 Brian Williams            16      0      0      0      0      1      1      2\n 4 Paul Rudd                 13      1      0      1      1      1      1      1\n 5 Ricky Gervais             13      0      0      0      0      0      0      1\n 6 Tom Brokaw                12      0      0      0      1      0      2      1\n 7 Richard Lewis             10      1      0      2      2      1      1      0\n 8 Will Ferrell              10      0      1      1      0      1      1      1\n 9 Bill O'Reilly             10      0      0      1      1      0      1      1\n10 Reza Aslan                10      0      0      0      0      0      0      1\n11 Sarah Vowell               9      0      0      0      1      0      1      1\n12 Adam Sandler               8      1      2      0      1      0      0      0\n13 Ben Affleck                8      0      0      0      0      2      0      0\n14 Maggie Gyllenh…            8      0      0      0      0      1      0      1\n15 Louis C.K.                 8      0      0      0      0      0      0      0\n# ℹ 10 more variables: `2006` &lt;int&gt;, `2007` &lt;int&gt;, `2008` &lt;int&gt;, `2009` &lt;int&gt;,\n#   `2010` &lt;int&gt;, `2011` &lt;int&gt;, `2012` &lt;int&gt;, `2013` &lt;int&gt;, `2014` &lt;int&gt;,\n#   `2015` &lt;int&gt;\n\n\n\n16.6.3 Part C\n\nCodeplot_data &lt;- daily |&gt; \n  mutate(broad_group = case_when(\n    group %in% c(\"Acting\", \"Athletics\", \"Comedy\", \"Musician\") ~ \"Acting, Comedy & Music\",\n    group %in% c(\"Media\", \"media\", \"Science\", \"Academic\", \"Consultant\", \"Clergy\") ~ \"Media\",\n    group %in% c(\"Politician\", \"Political Aide\", \"Government\", \"Military\", \"Business\", \"Advocacy\") ~ \"Government and Politics\",\n    .default = NA\n  )) |&gt; \n  filter(!is.na(broad_group)) |&gt;\n  group_by(year, broad_group) |&gt;\n  summarise(n = sum(year)) |&gt;\n  mutate(percentage = n/sum(n))\n\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument.\n\nCodeggplot(plot_data, aes(x = year, y = percentage, color = broad_group)) +\n  geom_line() +\n  labs(title = \"Daily Show Guests' Occupations by Year\", x = \"Year\", y = \"%\", color = \"Occupation Type\")",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Reshaping</span>"
    ]
  },
  {
    "objectID": "ica/ica-joining.html",
    "href": "ica/ica-joining.html",
    "title": "\n17  Joining\n",
    "section": "",
    "text": "17.1 Exercise 1: Where Are My Keys?",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Joining</span>"
    ]
  },
  {
    "objectID": "ica/ica-joining.html#exercise-1-where-are-my-keys",
    "href": "ica/ica-joining.html#exercise-1-where-are-my-keys",
    "title": "\n17  Joining\n",
    "section": "",
    "text": "17.1.1 Part A\n\nCodelibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nCodelibrary(ggplot2)\n\nstudents_2 &lt;- data.frame(\n  student = c(\"D\", \"E\", \"F\"),\n  class = c(\"COMP 101\", \"BIOL 101\", \"POLI 101\")\n)\n\nenrollments_2 &lt;- data.frame(\n  course = c(\"ART 101\", \"BIOL 101\", \"COMP 101\"),\n  enrollment = c(18, 20, 19)\n)\n\n\n\n17.1.2 Part B\n\nCodestudents_2 |&gt; \n  left_join(enrollments_2, join_by(class == course))\n\n  student    class enrollment\n1       D COMP 101         19\n2       E BIOL 101         20\n3       F POLI 101         NA\n\n\n\n17.1.3 Part C\n\nCodestudents_3 &lt;- data.frame(\n  student = c(\"Y\", \"Y\", \"Z\", \"Z\"),\n  class = c(\"COMP 101\", \"BIOL 101\", \"POLI 101\", \"COMP 101\"),\n  grade = c(\"B\", \"S\", \"C\", \"A\")\n)\n\nenrollments_3 &lt;- data.frame(\n  class = c(\"ART 101\", \"BIOL 101\",\"COMP 101\"),\n  grade = c(\"B\", \"A\", \"A-\"),\n  enrollment = c(20, 18, 19)\n)\n\nstudents_3 |&gt;\n  left_join(enrollments_3)\n\nJoining with `by = join_by(class, grade)`\n\n\n  student    class grade enrollment\n1       Y COMP 101     B         NA\n2       Y BIOL 101     S         NA\n3       Z POLI 101     C         NA\n4       Z COMP 101     A         NA\n\n\n\n17.1.4 Part D\n\nCodestudents_3 |&gt;\n  left_join(enrollments_3, join_by(class==class))\n\n  student    class grade.x grade.y enrollment\n1       Y COMP 101       B      A-         19\n2       Y BIOL 101       S       A         18\n3       Z POLI 101       C    &lt;NA&gt;         NA\n4       Z COMP 101       A      A-         19\n\n\n‘grade.x’ are the individual grade values from the students_3 dataset, and ‘grade.y’ are the average class grades from enrollments_3.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Joining</span>"
    ]
  },
  {
    "objectID": "ica/ica-joining.html#exercise-2-more-small-practice",
    "href": "ica/ica-joining.html#exercise-2-more-small-practice",
    "title": "\n17  Joining\n",
    "section": "\n17.2 Exercise 2: More Small Practice",
    "text": "17.2 Exercise 2: More Small Practice\n\nCodevoters &lt;- data.frame(\n  id = c(\"A\", \"D\", \"E\", \"F\", \"G\"),\n  times_voted = c(2, 4, 17, 6, 20)\n)\n\ncontact &lt;- data.frame(\n  name = c(\"A\", \"B\", \"C\", \"D\"),\n  address = c(\"summit\", \"grand\", \"snelling\", \"fairview\"),\n  age = c(24, 89, 43, 38)\n)\n\n# 1. We want contact info for people who HAVEN'T voted\ncontact |&gt;\n  anti_join(voters, join_by(name == id))\n\n  name  address age\n1    B    grand  89\n2    C snelling  43\n\nCode# 2. We want contact info for people who HAVE voted\ncontact |&gt;\n  semi_join(voters, join_by(name == id))\n\n  name  address age\n1    A   summit  24\n2    D fairview  38\n\nCode# 3. We want any data available on each person\ncontact |&gt;\n  full_join(voters, join_by(name == id))\n\n  name  address age times_voted\n1    A   summit  24           2\n2    B    grand  89          NA\n3    C snelling  43          NA\n4    D fairview  38           4\n5    E     &lt;NA&gt;  NA          17\n6    F     &lt;NA&gt;  NA           6\n7    G     &lt;NA&gt;  NA          20\n\nCode# 4. When possible, we want to add contact info to the voting roster\nvoters |&gt;\n  left_join(contact, join_by(id == name))\n\n  id times_voted  address age\n1  A           2   summit  24\n2  D           4 fairview  38\n3  E          17     &lt;NA&gt;  NA\n4  F           6     &lt;NA&gt;  NA\n5  G          20     &lt;NA&gt;  NA",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Joining</span>"
    ]
  },
  {
    "objectID": "ica/ica-joining.html#exercise-3-bigger-datasets",
    "href": "ica/ica-joining.html#exercise-3-bigger-datasets",
    "title": "\n17  Joining\n",
    "section": "\n17.3 Exercise 3: Bigger Datasets",
    "text": "17.3 Exercise 3: Bigger Datasets\n\nCodegrades &lt;- read.csv(\"https://mac-stat.github.io/data/grades.csv\") |&gt; \n  distinct(sid, sessionID, .keep_all = TRUE)\nhead(grades)\n\n     sid grade   sessionID\n1 S31185    D+ session1784\n2 S31185    B+ session1785\n3 S31185    A- session1791\n4 S31185    B+ session1792\n5 S31185    B- session1794\n6 S31185    C+ session1795\n\nCodecourses &lt;- read.csv(\"https://mac-stat.github.io/data/courses.csv\")\nhead(courses)\n\n    sessionID dept level    sem enroll     iid\n1 session1784    M   100 FA1991     22 inst265\n2 session1785    k   100 FA1991     52 inst458\n3 session1791    J   100 FA1993     22 inst223\n4 session1792    J   300 FA1993     20 inst235\n5 session1794    J   200 FA1993     22 inst234\n6 session1795    J   200 SP1994     26 inst230\n\nCode# How many observations (rows) and variables (columns) are there in the grades data?\nnrow(grades)\n\n[1] 5844\n\nCodencol(grades)\n\n[1] 3\n\nCode# How many observations (rows) and variables (columns) are there in the courses data?\nnrow(courses)\n\n[1] 1718\n\nCodencol(courses)\n\n[1] 6",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Joining</span>"
    ]
  },
  {
    "objectID": "ica/ica-joining.html#exercise-4-class-size",
    "href": "ica/ica-joining.html#exercise-4-class-size",
    "title": "\n17  Joining\n",
    "section": "\n17.4 Exercise 4: Class Size",
    "text": "17.4 Exercise 4: Class Size\n\n17.4.1 Part A\n\nCodecourses_combined &lt;- courses |&gt; \n  group_by(sessionID) |&gt; \n  summarise(enroll = sum(enroll))\n\n# Check that this has 1695 rows and 2 columns\ndim(courses_combined)\n\n[1] 1695    2\n\n\n\n17.4.2 Part B\n\nCodecourses_combined |&gt;\n  summarise(median(enroll))\n\n# A tibble: 1 × 1\n  `median(enroll)`\n             &lt;int&gt;\n1               18\n\n\n\n17.4.3 Part C\n\nCodestudent_class_size &lt;- grades |&gt;\n  left_join(courses_combined) |&gt;\n  group_by(sid) |&gt;\n  summarise(median_enroll = median(enroll))\n\nJoining with `by = join_by(sessionID)`\n\n\n\n17.4.4 Part D\n\nCodeggplot(student_class_size, aes(x = median_enroll)) +\n  geom_histogram(fill = \"#CBEF43\", color = \"#138A36\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nStudents most commonly have classes with around 15-25 students in them.",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Joining</span>"
    ]
  },
  {
    "objectID": "ica/ica-joining.html#exercise-5-narrowing-in-on-classes",
    "href": "ica/ica-joining.html#exercise-5-narrowing-in-on-classes",
    "title": "\n17  Joining\n",
    "section": "\n17.5 Exercise 5: Narrowing In On Classes",
    "text": "17.5 Exercise 5: Narrowing In On Classes\n\n17.5.1 Part A\n\nCodegrades |&gt;\n  filter(sessionID == \"session1986\")\n\n     sid grade   sessionID\n1 S31401    B+ session1986\n2 S32247     B session1986\n\n\n\n17.5.2 Part B\n\nCodedept_E &lt;- courses |&gt; \n  filter(dept == \"E\")\n\ndept_E |&gt;\n  left_join(grades) |&gt;\n  select(sid, sessionID, grade)\n\nJoining with `by = join_by(sessionID)`\n\n\n      sid   sessionID grade\n1  S31245 session2326     A\n2  S31938 session2326     A\n3  S32046 session2326    A-\n4  S32226 session2326     A\n5  S32415 session2835     B\n6  S31968 session3104     A\n7  S31470 session3658     B\n8  S32484 session3658    A-\n9  S31470 session3798     B\n10 S32022 session3798     A\n11 S31470 session3799     A\n12 S32415 session3799    B+",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Joining</span>"
    ]
  },
  {
    "objectID": "ica/ica-joining.html#exercise-6-all-the-wrangling",
    "href": "ica/ica-joining.html#exercise-6-all-the-wrangling",
    "title": "\n17  Joining\n",
    "section": "\n17.6 Exercise 6: All the Wrangling",
    "text": "17.6 Exercise 6: All the Wrangling\n\nCodegpa_conversion &lt;- tibble(\n  grade = c(\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"NC\", \"AU\", \"S\"), \n  gp = c(4.3, 4, 3.7, 3.3, 3, 2.7, 2.3, 2, 1.7, 1.3, 1, 0.7, 0, NA, NA)\n)\n\n\n\n17.6.1 Part A\n\nCodecourses |&gt;\n  group_by(dept) |&gt;\n  summarise(total_enroll = sum(enroll)) |&gt;\n  arrange(desc(total_enroll))\n\n# A tibble: 40 × 2\n   dept  total_enroll\n   &lt;chr&gt;        &lt;int&gt;\n 1 d             3046\n 2 j             2312\n 3 O             2178\n 4 M             2129\n 5 m             2105\n 6 D             2003\n 7 W             1960\n 8 q             1859\n 9 k             1824\n10 F             1587\n# ℹ 30 more rows\n\n\n\n17.6.2 Part B\n\nCodegrades |&gt;\n  left_join(gpa_conversion) |&gt;\n  group_by(sid) |&gt;\n  summarise(avg = mean(gp))\n\nJoining with `by = join_by(grade)`\n\n\n# A tibble: 443 × 2\n   sid      avg\n   &lt;chr&gt;  &lt;dbl&gt;\n 1 S31185  2.41\n 2 S31188 NA   \n 3 S31191 NA   \n 4 S31194  3.36\n 5 S31197  3.35\n 6 S31200  2.2 \n 7 S31203  3.82\n 8 S31206  2.46\n 9 S31209 NA   \n10 S31212  3.67\n# ℹ 433 more rows\n\n\n\n17.6.3 Part C\n\nCodegrades |&gt;\n  left_join(gpa_conversion) |&gt;\n  group_by(sid) |&gt;\n  summarise(avg = mean(gp)) |&gt;\n  summarise(median_all = median(avg, na.rm = TRUE))\n\nJoining with `by = join_by(grade)`\n\n\n# A tibble: 1 × 1\n  median_all\n       &lt;dbl&gt;\n1       3.43\n\n\n\n17.6.4 Part D\n\nCodegrades |&gt;\n  left_join(gpa_conversion) |&gt;\n  mutate(below = gp &lt; 3.3) |&gt;\n  summarise(mean(below, na.rm = TRUE))\n\nJoining with `by = join_by(grade)`\n\n\n  mean(below, na.rm = TRUE)\n1                 0.2834776\n\n\n\n17.6.5 Part E\n\nCodecourses |&gt;\n  left_join(grades) |&gt;\n  left_join(gpa_conversion) |&gt;\n  group_by(iid) |&gt;\n  summarise(inst_avg = mean(gp, na.rm = TRUE)) |&gt;\n  arrange(inst_avg)\n\nJoining with `by = join_by(sessionID)`\n\n\nWarning in left_join(courses, grades): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 57 of `x` matches multiple rows in `y`.\nℹ Row 1931 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nJoining with `by = join_by(grade)`\n\n\n# A tibble: 364 × 2\n   iid     inst_avg\n   &lt;chr&gt;      &lt;dbl&gt;\n 1 inst265     1.3 \n 2 inst444     1.7 \n 3 inst513     1.85\n 4 inst200     2   \n 5 inst507     2.2 \n 6 inst445     2.3 \n 7 inst420     2.6 \n 8 inst262     2.65\n 9 inst176     2.66\n10 inst234     2.7 \n# ℹ 354 more rows\n\n\n\n17.6.6 Part F\n\nCodecross_listed &lt;- courses |&gt;\n  count(sessionID) |&gt;\n  filter(n &gt; 1)\n\ncourses |&gt;\n  left_join(grades) |&gt;\n  left_join(gpa_conversion) |&gt;\n  anti_join(cross_listed) |&gt;\n  group_by(dept) |&gt;\n  summarise(dept_gp = mean(gp, na.rm = TRUE)) |&gt;\n  arrange(dept_gp)\n\nJoining with `by = join_by(sessionID)`\n\n\nWarning in left_join(courses, grades): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 57 of `x` matches multiple rows in `y`.\nℹ Row 1931 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nJoining with `by = join_by(grade)`\nJoining with `by = join_by(sessionID)`\n\n\n# A tibble: 39 × 2\n   dept  dept_gp\n   &lt;chr&gt;   &lt;dbl&gt;\n 1 o        3.08\n 2 M        3.10\n 3 K        3.17\n 4 G        3.18\n 5 B        3.2 \n 6 J        3.22\n 7 T        3.23\n 8 b        3.25\n 9 F        3.30\n10 d        3.31\n# ℹ 29 more rows",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Joining</span>"
    ]
  },
  {
    "objectID": "ica/ica-factors.html",
    "href": "ica/ica-factors.html",
    "title": "\n18  Factors\n",
    "section": "",
    "text": "18.1 Exercise 1: Changing Order\nCodegrade_distribution |&gt; \n  ggplot(aes(x = grade, y = n)) +\n    geom_col()\n\n\n\n\n\n\nCodegrade_distribution |&gt;\n  mutate(grade = fct_relevel(grade, c(\"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"NC\", \"S\", \"AU\"))) |&gt;\n  ggplot(aes(x = grade, y = n)) +\n  geom_col()\n\n\n\n\n\n\nCodegrade_distribution |&gt;\n  mutate(grade = fct_reorder(grade, n, .fun = \"median\")) |&gt;\n  ggplot(aes(x = grade, y = n)) +\n  geom_col()\n\n\n\n\n\n\nCodegrade_distribution |&gt;\n  mutate(grade = fct_reorder(grade, n, .fun = \"median\", .desc = TRUE)) |&gt;\n  ggplot(aes(x = grade, y = n)) +\n  geom_col()",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Factors</span>"
    ]
  },
  {
    "objectID": "ica/ica-factors.html#exercise-2-changing-factor-level-labels",
    "href": "ica/ica-factors.html#exercise-2-changing-factor-level-labels",
    "title": "\n18  Factors\n",
    "section": "\n18.2 Exercise 2: Changing Factor Level Labels",
    "text": "18.2 Exercise 2: Changing Factor Level Labels\n\nCodegrade_distribution |&gt;\n  mutate(grade = fct_relevel(grade, c(\"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"NC\", \"S\", \"AU\"))) |&gt;\n  mutate(grade = fct_recode(grade, \"Satisfactory\" = \"S\", \"Audit\" = \"AU\")) |&gt;\n  ggplot(aes(x = grade, y = n)) +\n  geom_col()",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Factors</span>"
    ]
  },
  {
    "objectID": "ica/ica-strings.html",
    "href": "ica/ica-strings.html",
    "title": "\n19  Strings\n",
    "section": "",
    "text": "20 Exercise 1: Time Slots\nCodelibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nCodecourses &lt;- read.csv(\"https://mac-stat.github.io/data/registrar.csv\")\nCode# Construct a table that indicates the number of classes offered in each day/time slot\n# Print only the 6 most popular time slots\ncourses |&gt;\n  count(time) |&gt;\n  arrange(desc(n)) |&gt;\n  head(6)\n\n              time  n\n1  9:40 - 11:10 am 78\n2 10:50 - 11:50 am 77\n3  9:40 - 10:40 am 74\n4   1:10 - 2:10 pm 69\n5   3:00 - 4:30 pm 65\n6   1:20 - 2:50 pm 63",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Strings</span>"
    ]
  },
  {
    "objectID": "ica/ica-strings.html#part-a",
    "href": "ica/ica-strings.html#part-a",
    "title": "\n19  Strings\n",
    "section": "\n23.1 Part A",
    "text": "23.1 Part A\n\nCodecourses_clean |&gt;\n  filter(instructor == \"Alicia Johnson\")\n\n  dept number section   crn                         name  days            time\n1 STAT    253      01 10806 Statistical Machine Learning  T R  9:40 - 11:10 am\n2 STAT    253      02 10807 Statistical Machine Learning  T R   1:20 - 2:50 pm\n3 STAT    253      03 10808 Statistical Machine Learning  T R   3:00 - 4:30 pm\n        room     instructor avail max enroll\n1 THEATR 206 Alicia Johnson    -3  20     23\n2 THEATR 206 Alicia Johnson    -3  20     23\n3 THEATR 206 Alicia Johnson     2  20     18",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Strings</span>"
    ]
  },
  {
    "objectID": "ica/ica-strings.html#part-b",
    "href": "ica/ica-strings.html#part-b",
    "title": "\n19  Strings\n",
    "section": "\n23.2 Part B",
    "text": "23.2 Part B\n\nCodestat &lt;- courses_clean |&gt;\n  filter(dept == \"STAT\") |&gt;\n  mutate(name = str_replace(name, \"Introduction to \", \"\")) |&gt;\n  mutate(name = str_replace(name, \"Statistical\", \"Stat\")) |&gt;\n  mutate(start_time = str_sub(time, 1, 5)) |&gt;\n  select(number, name, start_time, enroll)",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Strings</span>"
    ]
  },
  {
    "objectID": "ica/ica-data-import.html",
    "href": "ica/ica-data-import.html",
    "title": "\n20  Data Import\n",
    "section": "",
    "text": "21 Exercise 1: Save Data Locally\nData source: https://www.kaggle.com/datasets/tmdb/tmdb-movie-metadata Data creator: The Movie Database",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Data Import</span>"
    ]
  },
  {
    "objectID": "ica/ica-data-import.html#part-a",
    "href": "ica/ica-data-import.html#part-a",
    "title": "\n20  Data Import\n",
    "section": "\n22.1 Part A",
    "text": "22.1 Part A\n\nCodelibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nCodeimdb_messy &lt;- read_csv(\"~/Documents/GitHub/portfolio-aadachi27/data/imdb_5000_messy.csv\")\n\nNew names:\nRows: 5043 Columns: 29\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(12): color, director_name, actor_2_name, genres, actor_1_name, movie_ti... dbl\n(17): ...1, num_critic_for_reviews, duration, director_facebook_likes, a...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Data Import</span>"
    ]
  },
  {
    "objectID": "ica/ica-data-import.html#part-b",
    "href": "ica/ica-data-import.html#part-b",
    "title": "\n20  Data Import\n",
    "section": "\n22.2 Part B",
    "text": "22.2 Part B\n\nCode# This should be the folder where you stored this qmd!\ngetwd()\n\n[1] \"/Users/annab/Documents/GitHub/portfolio-aadachi27/ica\"",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Data Import</span>"
    ]
  },
  {
    "objectID": "ica/ica-data-import.html#part-c",
    "href": "ica/ica-data-import.html#part-c",
    "title": "\n20  Data Import\n",
    "section": "\n22.3 Part C",
    "text": "22.3 Part C\n\nCodeimdb_temp &lt;- read_csv(\"../data/imdb_5000_messy.csv\")\n\nNew names:\nRows: 5043 Columns: 29\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(12): color, director_name, actor_2_name, genres, actor_1_name, movie_ti... dbl\n(17): ...1, num_critic_for_reviews, duration, director_facebook_likes, a...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`",
    "crumbs": [
      "In-class Activities",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Data Import</span>"
    ]
  }
]